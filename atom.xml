<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Horace's IT Blog！]]></title>
  <subtitle><![CDATA[仗剑红尘已是癫，有酒平步上青天，游星戏斗弄日月，醉卧云端笑人间！]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://wlcyhao.github.io/"/>
  <updated>2014-08-28T02:20:09.549Z</updated>
  <id>http://wlcyhao.github.io/</id>
  
  <author>
    <name><![CDATA[Horace]]></name>
    <email><![CDATA[wlcyhao@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Windows系统无Internet访问权限的解决办法]]></title>
    <link href="http://wlcyhao.github.io/2014/08/28/internet_limit/"/>
    <id>http://wlcyhao.github.io/2014/08/28/internet_limit/</id>
    <published>2014-08-28T02:13:55.000Z</published>
    <updated>2014-08-28T02:19:49.000Z</updated>
    <content type="html"><![CDATA[<p>方法一：<br><a id="more"></a></p>
<pre><code>运行，输入：netsh winsock <span class="operator"><span class="keyword">reset</span> cata.<span class="keyword">log</span>回车
然后再输入：netsh <span class="built_in">int</span> ip <span class="keyword">reset</span> <span class="keyword">reset</span>.<span class="keyword">log</span>回车
最后重启系统即可</span>
</code></pre><p>方法二：</p>
<pre><code>运行，输入:netsh <span class="keyword">int</span> <span class="keyword">reset</span> ipconfig/flushdns回车
重启系统并分配静态网关
</code></pre>]]></content>
    <summary type="html"><![CDATA[<p>方法一：<br>]]></summary>
    
      <category term="网路，访问权限" scheme="http://wlcyhao.github.io/tags/%E7%BD%91%E8%B7%AF%EF%BC%8C%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90/"/>
    
      <category term="Windows" scheme="http://wlcyhao.github.io/categories/Windows/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ping 时显示TTL expired in transit]]></title>
    <link href="http://wlcyhao.github.io/2014/08/27/TTL-expired-in-transit/"/>
    <id>http://wlcyhao.github.io/2014/08/27/TTL-expired-in-transit/</id>
    <published>2014-08-27T11:15:20.000Z</published>
    <updated>2014-08-27T11:28:58.000Z</updated>
    <content type="html"><![CDATA[<p>当你在PING一台机器IP的时候出现如下显示,你可得注意了<br><a id="more"></a></p>
<pre><code>C:\Documents and Settings\Administrator&gt;ping <span class="keyword">*</span>.<span class="keyword">*</span>.4.11

Pinging <span class="keyword">*</span>.<span class="keyword">*</span>.4.11 with 32 bytes of data:

Reply from <span class="keyword">*</span>.<span class="keyword">*</span>.4.1: TTL expired in transit.
Reply from <span class="keyword">*</span>.<span class="keyword">*</span>.4.1: TTL expired in transit.
Reply from <span class="keyword">*</span>.<span class="keyword">*</span>.4.1: TTL expired in transit.
Reply from <span class="keyword">*</span>.<span class="keyword">*</span>.4.1: TTL expired in transit.
</code></pre><p>在TCP/IP网络中，网络层并不对数据包进行可靠性传输保证，只通过ICMP报文提供反馈机制(例如：差错控制)。PING命令就是ICMP的请求/响应报文，也是网络最常用的测试手段。通常使用PING命令测试互通性时有以下几种消息反馈：</p>
<p>1、Request Time Out<br>2、Destination Unreachable<br>3、TTL Expired in transit</p>
<p>情况1：当信源机PING某信宿机时，信源机在一段时间内（信源机发送ICMP请求报文后，会启动定时器0）无法收到ICMP响应报文，就会产生该种情况。出现上述问题的原因在于，信源到信宿的路由正常，而信宿到信源无可用通路。</p>
<p>情况2：当信源机到信宿机无可用通路时，就会产生该种原因。</p>
<p>情况3：当信源机发送IP数据包时（ICMP是被直接封装在IP包中），会加上包的TTL（Time to Live）时间，数据包在每经过一个路由器时，路由器会将包的TTL时间减1，如果在ICMP请求报文未到信宿机之前，该数据包的TTL为0，则相应的网关丢弃该报文，同时向信源机发送ICMP的超时报文，在信源机上应将显示TTL Expired in transit消息。该问题主要是在网络内部出现了路由循环造成数据包无法到达信宿机，可使用Tracert跟踪，判断故障出处（使用该命令时最好在主机上完成）。</p>
<p>注：某些路由器对包的TTL时间并不是减1，但一般情况是这样。<br>方法：如果正常PING通某主机的情况下，可简单从回应信息中分析数据包所经过的路由跳数<br>i.e. replay xxx.xxx.xxx.xxx: byte=xxx time=xxxms ttl=xxx<br>用256减去该条信息中TTL的值，即可得所经的路由跳数，如TTL时间过小，则可能网络中出现短暂的路由环路。</p>
<p>在配置静态路由时易出现该种情况，动态路由协议中RIPV1易出现，而RIPV2和OSPF不易出现。</p>
]]></content>
    <summary type="html"><![CDATA[<p>当你在PING一台机器IP的时候出现如下显示,你可得注意了<br>]]></summary>
    
      <category term="ping，TTL" scheme="http://wlcyhao.github.io/tags/ping%EF%BC%8CTTL/"/>
    
      <category term="交换路由" scheme="http://wlcyhao.github.io/categories/%E4%BA%A4%E6%8D%A2%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CRC循环冗余校验码]]></title>
    <link href="http://wlcyhao.github.io/2014/08/27/crc/"/>
    <id>http://wlcyhao.github.io/2014/08/27/crc/</id>
    <published>2014-08-27T11:12:28.000Z</published>
    <updated>2014-08-27T11:13:37.000Z</updated>
    <content type="html"><![CDATA[<p>CRC（Cyclic Redundancy Check)循环冗余校验码<br><a id="more"></a><br>CRC是常用的校验码，在早期的通信中运用广泛，因为早期的通信技术不够可靠（不可靠性的来源是通信技术决定的，比如电磁波通信时受雷电等因素的影响），不可靠的通信就会带来‘确认信息’的困惑，书上提到红军和蓝军通信联合进攻山下的敌军的例子，第一天红军发了条信息要蓝军第二天一起进攻，蓝军收到之后，发一条确认信息，但是蓝军担心的是‘确认信息’如果也不可靠而没有成功到达红军那里，那自己不是很危险？于是红军再发一条‘对确认的确认信息’，但同样的问题还是不能解决，红军仍然不敢冒然行动。</p>
<p>对通信的可靠性检查就需要‘校验’，校验是从数据本身进行检查，它依靠某种数学上约定的形式进行检查，校验的结果是可靠或不可靠，如果可靠就对数据进行处理，如果不可靠，就丢弃重发或者进行修复。</p>
<p>CRC码是由两部分组成，前部分是信息码，就是需要校验的信息，后部分是校验码，如果CRC码共长n个bit，信息码长k个bit，就称为(n,k)码。 它的编码规则是：   1、首先将原信息码(kbit)左移r位(k+r=n)   2、运用一个生成多项式g(x)（也可看成二进制数）用模2除上面的式子，得到的余数就是校验码。</p>
<p>非常简单，要说明的：模2除就是在除的过程中用模2加，模2加实际上就是我们熟悉的异或运算，就是加法不考虑进位，公式是： 0+0=1+1=0,1+0=0+1=1 即‘异’则真，‘非异’则假。     由此得到定理：a+b+b=a 也就是‘模2减’和‘模2加’直值表完全相同。</p>
<p>有了加减法就可以用来定义模2除法，于是就可以用生成多项式g(x)生成CRC校验码。<br>例如： g(x)=x4+x3+x2+1,(7,3)码,信息码110产生的CRC码就是： 11101 | 110,0000                111 01                1 0100                1 1101                   1001 余数是1001，所以CRC码是110,1001<br>标准的CRC码是，CRC-CCITT和CRC-16，它们的生成多项式是：   CRC-CCITT=x16+x12+x5+1   CRC-16=x16+x15+x2+1<br>CRC-32=x32+x26+x23+x22+x16+x12+x11+x10+x8+x7+x5+x4+x2+x+1</p>
]]></content>
    <summary type="html"><![CDATA[<p>CRC（Cyclic Redundancy Check)循环冗余校验码<br>]]></summary>
    
      <category term="CRC" scheme="http://wlcyhao.github.io/tags/CRC/"/>
    
      <category term="检验吗" scheme="http://wlcyhao.github.io/tags/%E6%A3%80%E9%AA%8C%E5%90%97/"/>
    
      <category term="交换路由" scheme="http://wlcyhao.github.io/categories/%E4%BA%A4%E6%8D%A2%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[浅谈ip default-network与ip route的异同]]></title>
    <link href="http://wlcyhao.github.io/2014/08/27/ip-default-gateway,ip-default-netwaork/"/>
    <id>http://wlcyhao.github.io/2014/08/27/ip-default-gateway,ip-default-netwaork/</id>
    <published>2014-08-27T11:09:19.000Z</published>
    <updated>2014-08-27T11:10:23.000Z</updated>
    <content type="html"><![CDATA[<p>1、<code>ip default-gateway</code><br>当路由器上的ip routing无效时，使用它指定默认路由，用于RXBoot模式（no ip routing）下安装IOS等。<br><a id="more"></a><br>2、<code>ip default-network</code>和<code>ip route 0.0.0.0 0.0.0.0</code><br>两者都用于ip routing有效的路由器上，区别主要在于路由协议是否传播这条路由信息。比如：IGRP无法识别0.0.0.0，因此传播默认路由时必须用<code>ip default-network</code>。</p>
<p>当用<code>ip default-network</code>指令设定多条默认路由时，administrative distance最短的成为最终的默认路由；如果有复数条路由distance值相等，那么在路由表（show ip route）中靠上的成为默认路由。</p>
<p>同时使用<code>ip default-network</code>和<code>ip route 0.0.0.0 0.0.0.0</code>双方设定默认路由时，如果<code>ip default-network</code>设定的网络是直连（静态、且已知）的，那么它就成为默认路由；如果<code>ip default-network</code>指定的网络是由交换路由信息得来的，则<code>ip route 0.0.0.0 0.0.0.0</code>指定的表项成为默认路由。</p>
<p>最后，如果使用多条<code>ip route 0.0.0.0 0.0.0.0</code>指令，则流量会自动在多条链路上负载均衡。</p>
<h2 id="补充一下">补充一下</h2>
<p>1,在用<code>ip default-gateway</code>(因为关掉路由,no ip routing)时,在大我数路由协议中    </p>
<p>要把通过上命令得到的路由通告出去的话,必须用启用</p>
<pre><code>#<span class="keyword">default</span>-information originate 和redistribute <span class="keyword">static</span>
</code></pre><p>或者可以用命</p>
<pre><code><span class="preprocessor">#network 0.0.0.0</span>
</code></pre><p>这样可以完成此静态路由的再发布.对 ip route 同样如此</p>
<p>2,ip routing中,如果是指向下一跳,那么administrative distance 是1,如果是指向<br>exit-interface外出,那么管理距离为0.</p>
<p>3,在负载均衡中,一般协议默认是可以4个,最大可设为6条,根据variance命令完成<br>但BGP是默认一条,最大可设6条,用命令<code>maximum-path</code> 完成.注意和variance实现的方式不一样.</p>
<p>4,为获取一跳,应用ip default-network时(因为IGRP不支持四0路由),<br>后面的网络号并不一定要是真实的网络,目的只是要让其他路由器知道本路由器是其他路由器发住未知网络的下一跳即可.<br>比如</p>
<pre><code><span class="title">ip</span> route <span class="number">100.0.0.0</span> <span class="number">255.255.255.0</span> s0
ip default-network <span class="number">100.0.0.0</span>
igrp <span class="number">2</span>
redistribute static
</code></pre><p>中,这个100….的网络可以不存在,但S0口外出是连外部网络就行,这样100….其就是0.0.0.0的替代.</p>
<p>同时,如果你在RIP之类的网络中启用ip default-networ命令时,RIP会把它作为一打0.0.0.0的标记通告出去,而不是具体命令所指的网络</p>
]]></content>
    <summary type="html"><![CDATA[<p>1、<code>ip default-gateway</code><br>当路由器上的ip routing无效时，使用它指定默认路由，用于RXBoot模式（no ip routing）下安装IOS等。<br>]]></summary>
    
      <category term="route" scheme="http://wlcyhao.github.io/tags/route/"/>
    
      <category term="交换路由" scheme="http://wlcyhao.github.io/categories/%E4%BA%A4%E6%8D%A2%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[华为交换机限制某个mac使用网络的方法]]></title>
    <link href="http://wlcyhao.github.io/2014/08/27/switch_confine_mac/"/>
    <id>http://wlcyhao.github.io/2014/08/27/switch_confine_mac/</id>
    <published>2014-08-27T11:00:29.000Z</published>
    <updated>2014-08-27T11:02:20.000Z</updated>
    <content type="html"><![CDATA[<p>网络里面有人接了个无线路由器，开了dhcp server，与单位的dhcp服务器冲突了，通过抓包发现了那个路由器的mac地址，想把它屏蔽了，找了一下，<br><a id="more"></a><br>可以通过这个命令：</p>
<p>mac-address blackhole 001d-0f99-b53e</p>
<p>这下子，网络里面那个家伙的广播包不见了，呵呵，不错不错，不用一直接电话了。</p>
]]></content>
    <summary type="html"><![CDATA[<p>网络里面有人接了个无线路由器，开了dhcp server，与单位的dhcp服务器冲突了，通过抓包发现了那个路由器的mac地址，想把它屏蔽了，找了一下，<br>]]></summary>
    
      <category term="arp" scheme="http://wlcyhao.github.io/tags/arp/"/>
    
      <category term="mac" scheme="http://wlcyhao.github.io/tags/mac/"/>
    
      <category term="路由器" scheme="http://wlcyhao.github.io/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
      <category term="交换路由" scheme="http://wlcyhao.github.io/categories/%E4%BA%A4%E6%8D%A2%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[光模块如何区分单模和多模?使用时的注意事项]]></title>
    <link href="http://wlcyhao.github.io/2014/08/27/guangmokuai_qufen/"/>
    <id>http://wlcyhao.github.io/2014/08/27/guangmokuai_qufen/</id>
    <published>2014-08-27T10:56:35.000Z</published>
    <updated>2014-08-27T10:57:51.000Z</updated>
    <content type="html"><![CDATA[<p>   光纤模块如何区分单模和多模？<br><a id="more"></a><br>   多模光纤模块：常见的多模模块的波长均为850nm，传输距离多为100M和500M，拉环或者体外颜色为黑色或者米色，所接光纤跳线为一般为橙色。</p>
<p>   单模光纤模块：单模模块波长则主要以1310nm和1550nm为主，传输距离有2km、10KM、40KM、60KM、80KM、120KM，拉环或者体外颜色为蓝色、黄色或者紫色，所接光纤跳线颜色为黄色。</p>
<p>   光纤模块使用时注意事项？</p>
<p>   1、光纤跳线两端的光模块的收发波长必须一致，也就是说光纤的两端必须是相同波长的光模块，简单的区分方法是光模块的颜色要一致。<br>   2、一般的情况下，短波光模块使用多模光纤（橙色的光纤），长波光模块使用单模光纤（黄色光纤），以保证数据传输的准确性。<br>   3、光纤在使用中不要过度弯曲和绕环，这样会增加光在传输过程的衰减。<br>   4、光纤跳线使用后一定要用保护套将光纤接头保护起来，灰尘和油污会损害光纤的耦合。</p>
]]></content>
    <summary type="html"><![CDATA[<p>   光纤模块如何区分单模和多模？<br>]]></summary>
    
      <category term="光线，单模，多模，区分" scheme="http://wlcyhao.github.io/tags/%E5%85%89%E7%BA%BF%EF%BC%8C%E5%8D%95%E6%A8%A1%EF%BC%8C%E5%A4%9A%E6%A8%A1%EF%BC%8C%E5%8C%BA%E5%88%86/"/>
    
      <category term="交换路由" scheme="http://wlcyhao.github.io/categories/%E4%BA%A4%E6%8D%A2%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu12.04 root用户登录桌面设置]]></title>
    <link href="http://wlcyhao.github.io/2014/08/27/ubunt1204_root_login/"/>
    <id>http://wlcyhao.github.io/2014/08/27/ubunt1204_root_login/</id>
    <published>2014-08-27T01:16:59.000Z</published>
    <updated>2014-08-27T01:17:57.000Z</updated>
    <content type="html"><![CDATA[<p>ubuntu12.04默认是不允许root登录的，在登录窗口只能看到普通用户和访客登录。以普通身份登陆Ubuntu后我们需要做一些修改。<br><a id="more"></a><br>普通用户登录后，修改系统配置文件需要切换到超级用户模式,在终端窗口里面输入:<code>sudo -s</code>.</p>
<p>然后输入普通用户登陆的密码，回车即可进入 root用户权限模式.</p>
<p>然后执行: <code>vi /etc/lightdm/lightdm.conf.</code></p>
<p>增加 greeter-show-manual-login=true allow-guest=false . 修改完的整个配置文件是</p>
<pre><code>[SeatDefaults]
<span class="variable">greeter-session=</span>unity-greeter
<span class="variable">user-session=</span>ubuntu
<span class="variable">greeter-show-manual-login=</span><span class="constant">true</span> <span class="comment">#手工输入登陆系统的用户名和密码</span>
<span class="variable">allow-guest=</span><span class="constant">false</span> <span class="comment">#不允许guest登录</span>
</code></pre><p>然后我们启动root帐号：</p>
<pre><code><span class="built_in">sudo</span> passwd root
</code></pre><p>根据提示输入roott帐号密码。</p>
<p>重启ubuntu，登录窗口会有“登录”选项，点击“登录”选项，就会提示让输入用户名了。这时候我们就可以通过root登录了。</p>
]]></content>
    <summary type="html"><![CDATA[<p>ubuntu12.04默认是不允许root登录的，在登录窗口只能看到普通用户和访客登录。以普通身份登陆Ubuntu后我们需要做一些修改。<br>]]></summary>
    
      <category term="root" scheme="http://wlcyhao.github.io/tags/root/"/>
    
      <category term="ubuntu" scheme="http://wlcyhao.github.io/tags/ubuntu/"/>
    
      <category term="Linux" scheme="http://wlcyhao.github.io/categories/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mac常用快捷键]]></title>
    <link href="http://wlcyhao.github.io/2014/08/25/mac_keboard-shortcut/"/>
    <id>http://wlcyhao.github.io/2014/08/25/mac_keboard-shortcut/</id>
    <published>2014-08-25T09:01:38.000Z</published>
    <updated>2014-08-25T09:03:44.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li>command+r 相当于F5,刷新页面</li>
<li>command+q 关闭当前程序</li>
<li>在Finder中command+/ 打开底部状态栏，可以查看剩余磁盘空间大小</li>
<li><code>sudo mdutil -a -i off</code>关闭spotlight的mdworkder,这个经常会疯狂占用系统cpu</li>
<li>内存占用超过75%的时候，执行一下purge，可以释放disk cache</li>
<li>从 finder 工具栏删除图标:按住command键,拖出来即可</li>
<li>finder的工具栏可以拖拽程序,脚本上去,于是打开命令行窗口很容易了</li>
<li>在命令行窗口执行 <code>open</code> . 就可以打开在当前目录打开 Finder</li>
</ul>
]]></content>
    
    
      <category term="mac" scheme="http://wlcyhao.github.io/tags/mac/"/>
    
      <category term="快捷键" scheme="http://wlcyhao.github.io/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
      <category term="Linux" scheme="http://wlcyhao.github.io/categories/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[根据IP地址查交换机端口]]></title>
    <link href="http://wlcyhao.github.io/2014/08/25/IP_switchport/"/>
    <id>http://wlcyhao.github.io/2014/08/25/IP_switchport/</id>
    <published>2014-08-25T08:53:26.000Z</published>
    <updated>2014-08-25T08:54:46.000Z</updated>
    <content type="html"><![CDATA[<p>   在一个Cisco 交换网络中间，已知某台机器的IP地址，如何找出它连接到了哪台交换机的哪个端口上呢?最方便快捷的方法使使用CiscoWorks 2000 LMS网管软件的User tracking 功能，图形化界面，一目了然。<br><a id="more"></a><br>　　如果没有这个软件，也可以使用以下手工分析方法来找出答案:</p>
<p>　　示例网络:核心交换机为6509(交换引擎SE用CatOS, MSFC运行IOS软件)<br>　　1. 找出该IP所对应的MAC地址:<br>　　通过查看系统的ARP缓存表可以找出某IP所对应的MAC地址。由于ARP不能跨VLAN进行，所以连接各个VLAN的路由模块MSFC就是最佳的选择–一般它在每一个VLAN都有一个端口(interface vlan n)，能正确地进行ARP解释。<br>　　6509MSFC#ping 10.10.1.65<br>　　Type escape sequence to abort.<br>　　Sending 5, 100-byte ICMP Echos to 10.10.1.65, timeout is 2 seconds:<br>　　!!!!!<br>　　Success rate is 100 percent (5/5), round-trip min/avg/max = 1/1/4 ms<br>　　6509MSFC#show arp | in 10.10.1.65<br>　　Internet 10.10.1.65 2 0006.2973.121d ARPA Vlan2<br>　　通过以上命令，我们知道10.10.1.65的MAC地址是0006.2973.121d, 这是IOS设备的MAC地址表达方式，在CatOS中，应写为00-06-29-73-12-1d.</p>
<p>　　2.在交换机上找出MAC地址所对应的端口<br>　　6509SE&gt; (enable) show cam 00-06-29-73-12-1d<br>　　* = Static Entry. + = Permanent Entry. # = System Entry. R = Router Entry.<br>　　X = Port Security Entry $ = Dot1x Security Entry<br>　　VLAN Dest MAC/Route Des [CoS] Destination Ports or VCs / [Protocol Type]<br>2 00-06-29-73-12-1d 9/41 [ALL]<br>　　Total Matching CAM Entries Displayed =1</p>
<p>　　这是不是说IP为 10.10.1.65的机器就接在端口9/41上呢?<br>　　不一定。如果以下命令中显示该端口上只有一个活动的MAC地址，那么答案就是肯定的:<br>　　6509SE&gt; (enable) show cam dynamic 9/41<br>　　* = Static Entry. + = Permanent Entry. # = System Entry. R = Router Entry.<br>　　X = Port Security Entry $ = Dot1x Security Entry<br>　　VLAN Dest MAC/Route Des [CoS] Destination Ports or VCs / [Protocol Type]<br>　　———————————————————————————-</p>
<p>　　2 00-06-29-73-12-1d 9/41 [ALL]<br>　　Total Matching CAM Entries Displayed =1<br>　　如果该命令显示该端口上有多个活动的MAC地址，那么这个端口应该连接到别的交换机或HUB设备上，见下面的例子(查找IP为10.10.1.250所对应的交换机端口):</p>
<p>　　6509MSFC#ping 10.10.1.250<br>　　Type escape sequence to abort.<br>　　Sending 5, 100-byte ICMP Echos to 10.10.1.250, timeout is 2 seconds:<br>　　!!!!!<br>　　Success rate is 100 percent (5/5), round-trip min/avg/max = 1/1/1 ms<br>　　6509MSFC#show arp | in 10.10.1.250<br>　　Internet 10.10.1.250 4 0009.6b8c.64ec ARPA Vlan2<br>　　6509SE&gt; (enable) show cam 00-09-6b-8c-64-ec<br>　　* = Static Entry. + = Permanent Entry. # = System Entry. R = Router Entry.<br>　　X = Port Security Entry $ = Dot1x Security Entry<br>　　VLAN Dest MAC/Route Des [CoS] Destination Ports or VCs / [Protocol Type]<br>　　———————————————————————————-</p>
<p>　　2 00-09-6b-8c-64-ec 3/11 [ALL]<br>　　Total Matching CAM Entries Displayed =1<br>　　6509SE&gt; (enable) show cam dy 3/11<br>　　* = Static Entry. + = Permanent Entry. # = System Entry. R = Router Entry.<br>　　X = Port Security Entry $ = Dot1x Security Entry<br>　　VLAN Dest MAC/Route Des [CoS] Destination Ports or VCs / [Protocol Type]<br>1 00-03-e3-4b-06-80 3/11 [ALL]<br>　　1 00-08-02-e6-b0-cd 3/11 [ALL]<br>　　1 00-02-a5-ee-f2-4f 3/11 [ALL]<br>　　1 00-09-6b-8c-66-d6 3/11 [ALL]<br>　　1 00-09-6b-63-17-d9 3/11 [ALL]<br>　　1 00-0b-cd-03-ec-f5 3/11 [ALL]<br>　　1 00-09-6b-63-17-d8 3/11 [ALL]<br>　　1 00-08-02-e6-b0-c1 3/11 [ALL]<br>　　1 00-08-02-e6-b0-85 3/11 [ALL]<br>　　1 00-08-02-e6-b0-81 3/11 [ALL]<br>　　1 00-02-a5-ef-16-af 3/11 [ALL]<br>　　1 00-02-a5-ee-f2-93 3/11 [ALL]<br>　　1 00-02-55-c6-05-61 3/11 [ALL]<br>　　2 00-09-6b-8c-64-ec 3/11 [ALL]<br>　　1 00-08-02-e6-b0-ed 3/11 [ALL]<br>　　1 00-08-02-e6-b0-a9 3/11 [ALL]<br>　　1 00-02-55-54-7a-e0 3/11 [ALL]<br>　　1 00-02-a5-ef-15-a6 3/11 [ALL]<br>　　1 00-08-02-e6-af-8f 3/11 [ALL]<br>　　1 00-08-02-e6-b0-bd 3/11 [ALL]<br>　　1 00-0b-cd-03-db-8b 3/11 [ALL]<br>　　1 00-09-6b-8c-25-50 3/11 [ALL]<br>　　Do you wish to continue y/n [n]? n</p>
<p>　　由于该端口连接到另一台交换机或HUB,必须继续追查，方法如下:<br>　　6509SE&gt; (enable) show cdp nei 3/11<br>　　* – indicates vlan mismatch.<br>　　# – indicates duplex mismatch.<br>　　Port Device-ID Port-ID Platform<br>　　———————————————————————————</p>
<p>　　3/11 Cisco2924 GigabitEthernet1/1 cisco WS-C2924M-XL<br>　　该命令显示对端设备是一台Cisco2924，如果没有显示，那么说明连接的是别的厂家的设备，可能要到该交换机上用类似的办法继续追查。本例子中是Cisco 设备，所有我们可以继续:</p>
<p>　　6509SE&gt; (enable) show cdp nei 3/11 de<br>　　Port (Our Port): 3/11<br>　　Device-ID: Cisco2924<br>　　Device Addresses:<br>　　IP Address: 10.10.0.60<br>　　Holdtime: 153 sec<br>　　Capabilities: TRANSPARENT_BRIDGE SWITCH<br>　　Version:<br>　　Cisco Internetwork Operating System Software<br>　　IOS ™ C2900XL Software (C2900XL-C3H2S-M), Version 12.0(5.2)XU, MAINTENANCE INTERIM SOFTWARE<br>　　Copyright (c) 1986-2000 by cisco Systems, Inc.<br>Compiled Mon 17-Jul-00 17:35 by ayounes<br>　　Platform: cisco WS-C2924M-XL<br>　　Port-ID (Port on Neighbors’s Device): GigabitEthernet1/1<br>　　VTP Management Domain: lan<br>　　Native VLAN: 1<br>　　Duplex: full<br>　　System Name: unknown<br>　　System Object ID: unknown<br>　　Management Addresses: unknown<br>　　Physical Location: unknown<br>　　Cisco2924#show mac-address-table dynamic address 0009.6b8c.64ec<br>　　Non-static Address Table:<br>　　Destination Address Address Type VLAN Destination Port<br>　　———————————————————————————-<br>　　0009.6b8c.64ec Dynamic 2 FastEthernet0/2<br>　　Cisco2924#show mac-address-table dynamic interface f0/2<br>　　Non-static Address Table:<br>　　Destination Address Address Type VLAN Destination Port<br>　　———————————————————————————-<br>　　0009.6b8c.64ec Dynamic 2 FastEthernet0/2<br>　　通过以上命令可知，MAC地址0009.6b8c.64ec 与Cisco 2924交换机相连，且是该端口上唯一活动的MAC地址，所以IP为10.10.1.250的机器应该就连接在这个端口上。</p>
]]></content>
    <summary type="html"><![CDATA[<p>   在一个Cisco 交换网络中间，已知某台机器的IP地址，如何找出它连接到了哪台交换机的哪个端口上呢?最方便快捷的方法使使用CiscoWorks 2000 LMS网管软件的User tracking 功能，图形化界面，一目了然。<br>]]></summary>
    
      <category term="交换机，端口" scheme="http://wlcyhao.github.io/tags/%E4%BA%A4%E6%8D%A2%E6%9C%BA%EF%BC%8C%E7%AB%AF%E5%8F%A3/"/>
    
      <category term="交换路由" scheme="http://wlcyhao.github.io/categories/%E4%BA%A4%E6%8D%A2%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[远程ssh登陆后关掉机房机器的脚本]]></title>
    <link href="http://wlcyhao.github.io/2014/08/25/ssh_shutdown_fuwuqi/"/>
    <id>http://wlcyhao.github.io/2014/08/25/ssh_shutdown_fuwuqi/</id>
    <published>2014-08-25T08:43:33.000Z</published>
    <updated>2014-08-25T08:44:52.000Z</updated>
    <content type="html"><![CDATA[<p>需求：<br>机房到放学时候学生都不走，希望在管理机上ssh登陆关机，对整个机房的所有学生机执行关机命令。<br>解决办法一：<br>passwd.txt 存放ip和密码，格式为：ip空格密码，比如<br>192.168.1.1 123456<br>192.168.1.2 654321<br><a id="more"></a><br>expect.sh</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/local/bin/expect</span></div><div class="line">spawn ssh root<span class="variable">@[</span>lindex <span class="variable">$argv</span> <span class="number">0</span>]</div><div class="line"><span class="keyword">sleep</span> .<span class="number">2</span></div><div class="line">expect “(yes/<span class="keyword">no</span>)?” {</div><div class="line"><span class="keyword">send</span> “yes\r”</div><div class="line">expect “*assword:”</div><div class="line"><span class="keyword">send</span> “[lindex <span class="variable">$argv</span> <span class="number">1</span>]\r”</div><div class="line">} “*assword:”</div><div class="line"><span class="keyword">send</span> “[lindex <span class="variable">$argv</span> <span class="number">1</span>]\r”</div><div class="line">expect -re {[<span class="variable">$#</span>] }</div><div class="line"><span class="keyword">send</span> “halt -p\r”</div><div class="line">expect EOF</div></pre></td></tr></table></figure>



<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="shebang">#!/bin/sh</span></div><div class="line"><span class="keyword">while</span> <span class="built_in">read</span> ip passwd</div><div class="line"><span class="keyword">do</span></div><div class="line"><span class="built_in">echo</span> “<span class="variable">$host</span>…..”</div><div class="line">/tmp/expect.sh <span class="variable">$ip</span> <span class="variable">$passwd</span></div><div class="line"><span class="keyword">done</span> &lt; passwd.txt</div></pre></td></tr></table></figure>

<p>为了省事，halt.sh里面调用expect就用了绝对路径，需要根据实际需要修改，呵呵。</p>
<p>解决方法二：<br>passwd.txt同上面存放ip和密码，格式为：ip空格密码，比如<br>192.168.1.1 123456<br>192.168.1.2 654321</p>
<p>halt.sh</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/local/bin/expect</span></div><div class="line"><span class="built_in">set</span> f [<span class="built_in">open</span> passwd.txt r]</div><div class="line"><span class="built_in">set</span> timeout <span class="number">150</span></div><div class="line"><span class="keyword">while</span> {[gets $f <span class="built_in">line</span>] &gt;= <span class="number">0</span>} {</div><div class="line">spawn ssh root@[lindex $<span class="built_in">line</span> <span class="number">0</span>]</div><div class="line">expect “(yes/no)?” {</div><div class="line"><span class="built_in">send</span> “yes\r”</div><div class="line">expect “*assword:”</div><div class="line"><span class="built_in">send</span> “[lindex $<span class="built_in">line</span> <span class="number">1</span>]\r”</div><div class="line">} “*assword:”</div><div class="line"><span class="built_in">send</span> “[lindex $<span class="built_in">line</span> <span class="number">1</span>]\r”</div><div class="line">expect -re {[$<span class="comment">#] }</span></div><div class="line"><span class="built_in">send</span> “halt -p\r”</div><div class="line">expect <span class="constant">eof</span></div><div class="line">}</div><div class="line"><span class="built_in">close</span> $f</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html"><![CDATA[<p>需求：<br>机房到放学时候学生都不走，希望在管理机上ssh登陆关机，对整个机房的所有学生机执行关机命令。<br>解决办法一：<br>passwd.txt 存放ip和密码，格式为：ip空格密码，比如<br>192.168.1.1 123456<br>192.168.1.2 654321<br>]]></summary>
    
      <category term="ssh" scheme="http://wlcyhao.github.io/tags/ssh/"/>
    
      <category term="远程" scheme="http://wlcyhao.github.io/tags/%E8%BF%9C%E7%A8%8B/"/>
    
      <category term="服务器运维" scheme="http://wlcyhao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[何为交换机背板带宽?]]></title>
    <link href="http://wlcyhao.github.io/2014/08/21/switch_beibandaikaun/"/>
    <id>http://wlcyhao.github.io/2014/08/21/switch_beibandaikaun/</id>
    <published>2014-08-21T13:52:50.000Z</published>
    <updated>2014-08-21T13:54:21.000Z</updated>
    <content type="html"><![CDATA[<p>背板带宽，是交换机接口处理器或接口卡和数据总线间所能吞吐的最大数据量。一台交换机的背板带宽越高，所能处理数据的能力就越强，但同时设计成本也会上去。<br><a id="more"></a><br>但是，我们如何去考察一个交换机的背板带宽是否够用呢？显然，通过估算的方法是没有用的，我认为应该从两个方面来考虑：<br>1、）所有端口容量X端口数量之和的2倍应该小于背板带宽，可实现全双工无阻塞交换，证明交换机具有发挥最大数据交换性能的条件。</p>
<p>2、）满配置吞吐量(Mpps)=满配置GE端口数×1.488Mpps其中1个千兆端口在包长为64字节时的理论吞吐量为1.488Mpps。例如，一台最多可以提供64个千兆端口的交换机，其满配置吞吐量应达到 64×1.488Mpps = 95.2Mpps，才能够确保在所有端口均线速工作时，提供无阻塞的包交换。如果一台交换机最多能够提供176个千兆端口，而宣称的吞吐量为不到261.8Mpps(176 x 1.488Mpps = 261.8)，那么用户有理由认为该交换机采用的是有阻塞的结构设计。一般是两者都满足的交换机才是合格的交换机。</p>
<p>背板相对大，吞吐量相对小的交换机，除了保留了升级扩展的能力外就是软件效率/专用芯片电路设计有问题；背板相对小。吞吐量相对大的交换机，整体性能比较高。不过背板带宽是可以相信厂家的宣传的，可吞吐量是无法相信厂家的宣传的，因为后者是个设计值，测试很困难的并且意义不是很大。</p>
<p>交换机的背版速率一般是：Mbps,指的是第二层，对于三层以上的交换才采用Mpps</p>
]]></content>
    <summary type="html"><![CDATA[<p>背板带宽，是交换机接口处理器或接口卡和数据总线间所能吞吐的最大数据量。一台交换机的背板带宽越高，所能处理数据的能力就越强，但同时设计成本也会上去。<br>]]></summary>
    
      <category term="交换机，背板带宽" scheme="http://wlcyhao.github.io/tags/%E4%BA%A4%E6%8D%A2%E6%9C%BA%EF%BC%8C%E8%83%8C%E6%9D%BF%E5%B8%A6%E5%AE%BD/"/>
    
      <category term="交换路由" scheme="http://wlcyhao.github.io/categories/%E4%BA%A4%E6%8D%A2%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[海明码的计算]]></title>
    <link href="http://wlcyhao.github.io/2014/08/21/haiming_code/"/>
    <id>http://wlcyhao.github.io/2014/08/21/haiming_code/</id>
    <published>2014-08-21T13:50:38.000Z</published>
    <updated>2014-08-21T15:26:28.000Z</updated>
    <content type="html"><![CDATA[<p>在网上看到的一个海明码的计算方法，感觉很不错的。。。<br><a id="more"></a><br><img src="/img/haimingma.jpg" alt="hamm"></p>
]]></content>
    <summary type="html"><![CDATA[<p>在网上看到的一个海明码的计算方法，感觉很不错的。。。<br>]]></summary>
    
      <category term="海明码" scheme="http://wlcyhao.github.io/tags/%E6%B5%B7%E6%98%8E%E7%A0%81/"/>
    
      <category term="交换路由" scheme="http://wlcyhao.github.io/categories/%E4%BA%A4%E6%8D%A2%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[光纤跳线如何区分单模和多模]]></title>
    <link href="http://wlcyhao.github.io/2014/08/21/qufen_guanxian/"/>
    <id>http://wlcyhao.github.io/2014/08/21/qufen_guanxian/</id>
    <published>2014-08-21T13:46:59.000Z</published>
    <updated>2014-08-21T13:49:07.000Z</updated>
    <content type="html"><![CDATA[<p>单模光纤：中心玻璃芯较细（芯径一般为9或10μm），只能传一种模式的光。因此，其模间色散很小，适用于远程通讯，但其色度色散起主要作用，这样单模光纤对光源的谱宽和稳定性有较高的要求，即谱宽要窄，稳定性要好;远距离情况使用。<br><a id="more"></a><br>单模跳线的印字有”<strong>SM</strong>“或“G652”、“G655”、“G657”、“9/125”的字样，<strong>颜色是淡黄色</strong></p>
<p>多模光纤：中心玻璃芯较粗（50或62.5μm），可传多种模式的光。但其模间色散较大，这就限制了传输数字信号的频率，而且随距离的增加会更加严重。例如：600MB/KM的光纤在2KM时则只有300MB的带宽了。因此，多模光纤传输的距离就比较近，一般只有几公里。</p>
<p>多模跳线的印字有“<strong>MM</strong>“或”OM3″,”50/125″、”62.5/125″的字样，<strong>颜色是橙黄色</strong></p>
]]></content>
    <summary type="html"><![CDATA[<p>单模光纤：中心玻璃芯较细（芯径一般为9或10μm），只能传一种模式的光。因此，其模间色散很小，适用于远程通讯，但其色度色散起主要作用，这样单模光纤对光源的谱宽和稳定性有较高的要求，即谱宽要窄，稳定性要好;远距离情况使用。<br>]]></summary>
    
      <category term="光线，多模，单模，跳线" scheme="http://wlcyhao.github.io/tags/%E5%85%89%E7%BA%BF%EF%BC%8C%E5%A4%9A%E6%A8%A1%EF%BC%8C%E5%8D%95%E6%A8%A1%EF%BC%8C%E8%B7%B3%E7%BA%BF/"/>
    
      <category term="交换路由" scheme="http://wlcyhao.github.io/categories/%E4%BA%A4%E6%8D%A2%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[windows下定期自动备份本地文件(文件夹)]]></title>
    <link href="http://wlcyhao.github.io/2014/08/21/beifen_wenjianjia/"/>
    <id>http://wlcyhao.github.io/2014/08/21/beifen_wenjianjia/</id>
    <published>2014-08-21T13:36:32.000Z</published>
    <updated>2014-08-21T13:42:42.000Z</updated>
    <content type="html"><![CDATA[<p>虽然网上有一些免费的文件自动备份软件，但是没有自己编写一段批处理来完成备份任务来的放心，而且不用占用系统资源。</p>
<p>下面介绍一下如何利用批处理完成本地文件或者文件夹的备份。<br><a id="more"></a><br>该方法可把某文件夹下的文件同步到另外的文件夹，可忽略已经存在的文件，可根据文件日期来判断复制最新的文件。</p>
<p>首先建立一个文本文件，复制以下代码：</p>
<pre><code>@echo off
echo 正在复制”<span class="keyword">C</span>:\a”文件夹的内容至”<span class="keyword">D</span>:\b”文件夹下……
xcopy “<span class="keyword">C</span>:\a” “<span class="keyword">D</span>:\b” /e/<span class="keyword">I</span>/d/h/r/y
echo 正在复制”<span class="keyword">C</span>:\c”文件夹的内容至”<span class="keyword">D</span>:\d”文件夹下……
xcopy “<span class="keyword">C</span>:\c” “<span class="keyword">D</span>:\d” /e/<span class="keyword">I</span>/d/h/r/y
exit
</code></pre><p>保存该文本文件，修改文件名为X.bat 其中X可以任意命名。<br>打开”控制面板”—“计划任务”添加计划任务，计划任务里的执行目标为该批处理文件，设定在什么时候执行，我们可以设置为每天的05:00执行此批处理，这样每天就会执行该备份，让我们的文件永远有备份，再也不会为文件丢失而发愁了。</p>
<p>注释: 代码里的双引号(“”)以内的内容是文件夹路径，可以根据实际情况修改，前面是需要备份的文件夹路径，后面是备份文件夹路径。<br>如果需要备份更多的文件夹只需要多个xcopy 后面的格式和代码中相同，不要忘记两个路径之间有一个空格</p>
<pre><code>参数说明：
/e：拷贝所有子目录，包括空子目录；
/<span class="keyword">I</span>： 如果目标文件或目录不存在且拷贝的文件数多于一，则假设目标为目录；
/d：只拷贝文件日期与在目标文件后的文件（即修改过的源文件）
/h：同时拷贝隐藏文件和系统文件
/r：拷贝并覆盖只读文件
/y： 复制文件审核设置（不显示已有文件覆盖确认）
</code></pre><p>以上参数可以根据需要添加，推荐都加上最好。</p>
<p>下面就根据上面的代码扩展更多应用。<br>比如远程备份文件夹，给文件夹以日期命名。<br>下面给大家来讲解：<br>远程备份文件夹需要远程共享了文件夹<br>如果已经共享了该文件夹我们只需要修改代码中的需要备份的文件夹路径就可以了　</p>
<p>例如：我需要远程定期备份远程主机上的”a”文件夹,代码如下</p>
<pre><code>@echo off
echo 正在复制主机192.168.0.2的”a”文件夹的内容至”D:<span class="command">\b</span>”文件夹下……
xcopy “<span class="command">\\</span>192.168.0.2<span class="command">\a</span>” “D:<span class="command">\b</span>” /e/I/d/h/r/y
exit
</code></pre><p>其他和上面方法一样，保存为.bat文件，添加计划任务就行了。</p>
<p>如果我想以日期的形式保存文件夹，而且每天都有一个备份，那么我可以这样。</p>
<pre><code>@<span class="keyword">echo</span> off
<span class="keyword">echo</span> 正在复制主机<span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.<span class="number">2</span>的”a”文件夹的内容至”D:\b”文件夹下……
<span class="winutils">xcopy</span> “\\<span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.<span class="number">2</span>\a” “D:\<span class="envvar">%te%</span>\” /e/I/d/h/r/y
<span class="flow">exit</span>
</code></pre><p>这样就可以为每天的备份放到每个以日期命名的文件夹里了<br>其中/e参数可以不要，因为每天备份都是以一个新的文件夹开始的，那么就没有文件日期的问题了。</p>
]]></content>
    <summary type="html"><![CDATA[<p>虽然网上有一些免费的文件自动备份软件，但是没有自己编写一段批处理来完成备份任务来的放心，而且不用占用系统资源。</p>
<p>下面介绍一下如何利用批处理完成本地文件或者文件夹的备份。<br>]]></summary>
    
      <category term="批处理，自动备份" scheme="http://wlcyhao.github.io/tags/%E6%89%B9%E5%A4%84%E7%90%86%EF%BC%8C%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD/"/>
    
      <category term="Windows" scheme="http://wlcyhao.github.io/categories/Windows/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[windows7 连接共享时提示出现了一个错误(null)的解决办法]]></title>
    <link href="http://wlcyhao.github.io/2014/08/21/win7_vmware_netshare/"/>
    <id>http://wlcyhao.github.io/2014/08/21/win7_vmware_netshare/</id>
    <published>2014-08-21T13:23:25.000Z</published>
    <updated>2014-08-21T13:24:29.000Z</updated>
    <content type="html"><![CDATA[<p>在windows7下跑vmware测东西，虚拟机器上不了网，启动连接共享的时候提示：internet连接共享访问被启用时，出现了一个错误(null)<br><a id="more"></a><br>这是因为关掉了系统防火墙的原因。</p>
<p>解决办法很简单：</p>
<p>点击 Windows + R 在运行窗口中输入 services.msc 。</p>
<p>找到 windows Firewall 服务，点击启动即可。</p>
]]></content>
    <summary type="html"><![CDATA[<p>在windows7下跑vmware测东西，虚拟机器上不了网，启动连接共享的时候提示：internet连接共享访问被启用时，出现了一个错误(null)<br>]]></summary>
    
      <category term="win7" scheme="http://wlcyhao.github.io/tags/win7/"/>
    
      <category term="共享" scheme="http://wlcyhao.github.io/tags/%E5%85%B1%E4%BA%AB/"/>
    
      <category term="Windows" scheme="http://wlcyhao.github.io/categories/Windows/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[删除U盘时提示无法停止‘通用卷’设备的解决方法]]></title>
    <link href="http://wlcyhao.github.io/2014/08/21/stop_u/"/>
    <id>http://wlcyhao.github.io/2014/08/21/stop_u/</id>
    <published>2014-08-21T13:15:10.000Z</published>
    <updated>2014-08-21T13:16:47.000Z</updated>
    <content type="html"><![CDATA[<p>安全删除U盘时，大家常常会遇到提示“无法停止‘通用卷’设备，请稍候再停止该设备。”这种情况下可以强行拔下U盘吗？当然不可以！这时候如果强行拔除的话，很容易损坏计算机U口或者你的U盘。如果你的U盘上有重要的资料，很有可能就此毁坏了。那么应该怎么办呢？<br><a id="more"></a><br>第一种方法: </p>
<p>往往我们在把U盘的文件或者数据取出来的时候，都是用的“复制”“粘贴”方式，而如果复制的是U盘上的文件，这个文件就会一直放在系统的剪切板里，处于待用状态。而如果这种情况下我们要删除U盘的话，就会出现上面的无法停止U盘的提示。 </p>
<p>相应的解决办法就是：清空你的剪切板，或者在你的硬盘上随便进行一下复制某文件再粘贴的操作，这时候你再去删除U盘提示符，看看是不是顺利删除了？ </p>
<p>第二种方法： </p>
<p>如果觉得上面那种方法还无效的话，可以使用下面这个方法： </p>
<p>同时按下键盘的”Ctrl”＋”Alt”＋”Del”组合键，这时会出现”任务管理器”的窗口，单击”进程”标签，在”映像名称”中寻找”rundll32.exe”进程，选择”rundll32.exe”进程，然后点击”结束进程”，这时会弹出任务管理器警告，问你确定是否关闭此进程，点击”是”，即关闭了”rundll32.exe”进程。再删除U盘就可以正常删除了。 </p>
<p>使用这种方法时请注意：如果有多个”rundll32.exe”进程，需要将多个”rundll32.exe”进程全部关闭。 </p>
<p>第三种方法： </p>
<p>这种方法同样是借助了任务管理器，同时按下键盘的”Ctrl”＋”Alt”＋”Del”组合键，出现”任务管理器”的窗口，单击”进程”，寻找”EXPLORER.EXE”进程并结束它。这时候你会发现你的桌面不见了，请不要惊慌，继续进行下面的操作，在任务管理器中点击“文件”——“新建任务”——输入EXPLORER.EXE——确定。再删除U盘，你会发现可以安全删除了。 </p>
<p>第四种方法： </p>
<p>这种方法最简单，但最耗时，那就是，重启你的电脑。 </p>
<p>如果觉得出现问题的时候才解决有些麻烦，可以采用下面这个提前的预防措施： </p>
<p>关闭系统的预览功能。<br>方法：双击我的电脑——工具——文件夹选项——常规——任务——使用windows传统风格的文件夹，然后点击确定就行了。这样一劳永逸了。 </p>
<p>小窍门：目前有些U盘的技术很到位了，有的U盘直接插拔也可以的。但无论是多好的U盘，有一种时候是绝对不能直接插拔的，那就是仔细看你U盘的那个小红灯，小灯在不停闪的时候表示正在不停地读写数据，这时候千万不能拔，否则轻则损坏数据，重则U盘报废。</p>
]]></content>
    <summary type="html"><![CDATA[<p>安全删除U盘时，大家常常会遇到提示“无法停止‘通用卷’设备，请稍候再停止该设备。”这种情况下可以强行拔下U盘吗？当然不可以！这时候如果强行拔除的话，很容易损坏计算机U口或者你的U盘。如果你的U盘上有重要的资料，很有可能就此毁坏了。那么应该怎么办呢？<br>]]></summary>
    
      <category term="U盘，弹出" scheme="http://wlcyhao.github.io/tags/U%E7%9B%98%EF%BC%8C%E5%BC%B9%E5%87%BA/"/>
    
      <category term="Windows" scheme="http://wlcyhao.github.io/categories/Windows/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何用拼音输入法输入不会读的字？]]></title>
    <link href="http://wlcyhao.github.io/2014/08/21/pingyin_input/"/>
    <id>http://wlcyhao.github.io/2014/08/21/pingyin_input/</id>
    <published>2014-08-21T13:08:39.000Z</published>
    <updated>2014-08-21T15:27:34.000Z</updated>
    <content type="html"><![CDATA[<p>遇到不会读的字，怎么用拼音打？网友提供小技巧：<br><a id="more"></a><br>可以先打个“u”然后打各个部首的读音，就能出来哦，如图所示！在搜狗拼音、谷歌拼音、QQ输入法下都成功测试过。</p>
<p><img src="/img/4602.jpg" alt="pinyin"></p>
]]></content>
    <summary type="html"><![CDATA[<p>遇到不会读的字，怎么用拼音打？网友提供小技巧：<br>]]></summary>
    
      <category term="拼音，输入法" scheme="http://wlcyhao.github.io/tags/%E6%8B%BC%E9%9F%B3%EF%BC%8C%E8%BE%93%E5%85%A5%E6%B3%95/"/>
    
      <category term="Windows" scheme="http://wlcyhao.github.io/categories/Windows/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在Markdown文档中插入表格(table)]]></title>
    <link href="http://wlcyhao.github.io/2014/08/21/markdown_insert_table/"/>
    <id>http://wlcyhao.github.io/2014/08/21/markdown_insert_table/</id>
    <published>2014-08-21T02:01:00.000Z</published>
    <updated>2014-08-21T07:26:13.000Z</updated>
    <content type="html"><![CDATA[<p>插入表格算是Markdown的扩展语法</p>
<p>使用很简单，示例如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">| <span class="class">Tables</span>        | <span class="class">Are</span>           | <span class="class">Cool</span>  |  </div><div class="line">| ------------- |-------------- | ------|  </div><div class="line">| col <span class="number">3</span> is      | right-aligned | <span class="char">$1</span>600 |  </div><div class="line">| col <span class="number">2</span> is      <span class="localvars">| centered      |</span>   <span class="char">$1</span>2 | </div><div class="line"><span class="localvars">| zebra stripes | are neat      |</span>    <span class="char">$1</span> |</div></pre></td></tr></table></figure>

<a id="more"></a>

<p>效果如下：</p>
<table>
<thead>
<tr>
<th>Tables</th>
<th>Are</th>
<th>Cool</th>
</tr>
</thead>
<tbody>
<tr>
<td>col 3 is</td>
<td>right-aligned</td>
<td>$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td>centered</td>
<td>$12</td>
</tr>
<tr>
<td>zebra stripes</td>
<td>are neat</td>
<td>$1</td>
</tr>
</tbody>
</table>
<p><strong>注：</strong>表头和数据行之间用<code>|----|</code>隔开</p>
]]></content>
    <summary type="html"><![CDATA[<p>插入表格算是Markdown的扩展语法</p>
<p>使用很简单，示例如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">| <span class="class">Tables</span>        | <span class="class">Are</span>           | <span class="class">Cool</span>  |  </div><div class="line">| ------------- |-------------- | ------|  </div><div class="line">| col <span class="number">3</span> is      | right-aligned | <span class="char">$1</span>600 |  </div><div class="line">| col <span class="number">2</span> is      <span class="localvars">| centered      |</span>   <span class="char">$1</span>2 | </div><div class="line"><span class="localvars">| zebra stripes | are neat      |</span>    <span class="char">$1</span> |</div></pre></td></tr></table></figure>

]]></summary>
    
      <category term="markdown" scheme="http://wlcyhao.github.io/tags/markdown/"/>
    
      <category term="table" scheme="http://wlcyhao.github.io/tags/table/"/>
    
      <category term="Markdown" scheme="http://wlcyhao.github.io/categories/Markdown/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ping服务器网速的工具]]></title>
    <link href="http://wlcyhao.github.io/2014/08/20/ping_network_speed/"/>
    <id>http://wlcyhao.github.io/2014/08/20/ping_network_speed/</id>
    <published>2014-08-20T07:35:44.000Z</published>
    <updated>2014-08-20T07:36:34.000Z</updated>
    <content type="html"><![CDATA[<p>购买vps之前评测中国用户访问速度，或者网站运营异常的时候测试网速，判断dns是否配置正确，都可以简单 ping一下，初步了解情况</p>
<ol>
<li>面向国内用户的中文网站，用 <a href="http://ping.chinaz.com/" target="_blank" rel="external">http://ping.chinaz.com/</a></li>
<li>面向全球用户的英文网站，用 <a href="http://www.just-ping.com/" target="_blank" rel="external">http://www.just-ping.com/</a></li>
</ol>
]]></content>
    
    
      <category term="ping" scheme="http://wlcyhao.github.io/tags/ping/"/>
    
      <category term="vps" scheme="http://wlcyhao.github.io/tags/vps/"/>
    
      <category term="服务器运维" scheme="http://wlcyhao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[取消ubuntu让人崩溃的sudo]]></title>
    <link href="http://wlcyhao.github.io/2014/08/20/cacel_ubuntu_sudo/"/>
    <id>http://wlcyhao.github.io/2014/08/20/cacel_ubuntu_sudo/</id>
    <published>2014-08-20T07:23:35.000Z</published>
    <updated>2014-08-20T07:29:17.000Z</updated>
    <content type="html"><![CDATA[<p>使用Vagrant，因为大部分box都是基于ubuntu的，初始化之后，它会自动生成一个账号 <em>vagrant</em>，这货不是root，于是执行各种命令前都要加一个<code>sudo</code></p>
<p>本地虚拟机，就自己一个人用，还要sudo，这种脑残设定太恶心了</p>
<p>在ubuntu中取消默认的sudo，方法如下：</p>
<pre><code><span class="built_in">cd</span> ~
<span class="built_in">echo</span> <span class="string">"sudo bash"</span>&gt;&gt;.bash_login
</code></pre><p>重新登录之后，你就发现 root 在等你</p>
]]></content>
    
    
      <category term="ubuntu" scheme="http://wlcyhao.github.io/tags/ubuntu/"/>
    
      <category term="vagrant" scheme="http://wlcyhao.github.io/tags/vagrant/"/>
    
      <category term="服务器运维" scheme="http://wlcyhao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
</feed>
