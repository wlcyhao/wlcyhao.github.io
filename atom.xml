<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Horace's IT Blog！]]></title>
  <subtitle><![CDATA[仗剑红尘已是癫，有酒平步上青天，游星戏斗弄日月，醉卧云端笑人间！]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://wlcyhao.github.io/"/>
  <updated>2014-08-21T14:00:35.783Z</updated>
  <id>http://wlcyhao.github.io/</id>
  
  <author>
    <name><![CDATA[Horace]]></name>
    <email><![CDATA[wlcyhao@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[何为交换机背板带宽?]]></title>
    <link href="http://wlcyhao.github.io/2014/08/21/switch_beibandaikaun/"/>
    <id>http://wlcyhao.github.io/2014/08/21/switch_beibandaikaun/</id>
    <published>2014-08-21T13:52:50.000Z</published>
    <updated>2014-08-21T13:54:21.000Z</updated>
    <content type="html"><![CDATA[<p>背板带宽，是交换机接口处理器或接口卡和数据总线间所能吞吐的最大数据量。一台交换机的背板带宽越高，所能处理数据的能力就越强，但同时设计成本也会上去。<br><a id="more"></a><br>但是，我们如何去考察一个交换机的背板带宽是否够用呢？显然，通过估算的方法是没有用的，我认为应该从两个方面来考虑：<br>1、）所有端口容量X端口数量之和的2倍应该小于背板带宽，可实现全双工无阻塞交换，证明交换机具有发挥最大数据交换性能的条件。</p>
<p>2、）满配置吞吐量(Mpps)=满配置GE端口数×1.488Mpps其中1个千兆端口在包长为64字节时的理论吞吐量为1.488Mpps。例如，一台最多可以提供64个千兆端口的交换机，其满配置吞吐量应达到 64×1.488Mpps = 95.2Mpps，才能够确保在所有端口均线速工作时，提供无阻塞的包交换。如果一台交换机最多能够提供176个千兆端口，而宣称的吞吐量为不到261.8Mpps(176 x 1.488Mpps = 261.8)，那么用户有理由认为该交换机采用的是有阻塞的结构设计。一般是两者都满足的交换机才是合格的交换机。</p>
<p>背板相对大，吞吐量相对小的交换机，除了保留了升级扩展的能力外就是软件效率/专用芯片电路设计有问题；背板相对小。吞吐量相对大的交换机，整体性能比较高。不过背板带宽是可以相信厂家的宣传的，可吞吐量是无法相信厂家的宣传的，因为后者是个设计值，测试很困难的并且意义不是很大。</p>
<p>交换机的背版速率一般是：Mbps,指的是第二层，对于三层以上的交换才采用Mpps</p>
]]></content>
    <summary type="html"><![CDATA[<p>背板带宽，是交换机接口处理器或接口卡和数据总线间所能吞吐的最大数据量。一台交换机的背板带宽越高，所能处理数据的能力就越强，但同时设计成本也会上去。<br>]]></summary>
    
      <category term="交换机，背板带宽" scheme="http://wlcyhao.github.io/tags/%E4%BA%A4%E6%8D%A2%E6%9C%BA%EF%BC%8C%E8%83%8C%E6%9D%BF%E5%B8%A6%E5%AE%BD/"/>
    
      <category term="交换路由" scheme="http://wlcyhao.github.io/categories/%E4%BA%A4%E6%8D%A2%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[海明码的计算]]></title>
    <link href="http://wlcyhao.github.io/2014/08/21/haiming_code/"/>
    <id>http://wlcyhao.github.io/2014/08/21/haiming_code/</id>
    <published>2014-08-21T13:50:38.000Z</published>
    <updated>2014-08-21T14:00:05.000Z</updated>
    <content type="html"><![CDATA[<p>在网上看到的一个海明码的计算方法，感觉很不错的。。。<br><a id="more"></a><br><img src="http://i.imgur.com/Py6s9Rk.jpg" alt=""></p>
]]></content>
    <summary type="html"><![CDATA[<p>在网上看到的一个海明码的计算方法，感觉很不错的。。。<br>]]></summary>
    
      <category term="海明码" scheme="http://wlcyhao.github.io/tags/%E6%B5%B7%E6%98%8E%E7%A0%81/"/>
    
      <category term="交换路由" scheme="http://wlcyhao.github.io/categories/%E4%BA%A4%E6%8D%A2%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[光纤跳线如何区分单模和多模]]></title>
    <link href="http://wlcyhao.github.io/2014/08/21/qufen_guanxian/"/>
    <id>http://wlcyhao.github.io/2014/08/21/qufen_guanxian/</id>
    <published>2014-08-21T13:46:59.000Z</published>
    <updated>2014-08-21T13:49:07.000Z</updated>
    <content type="html"><![CDATA[<p>单模光纤：中心玻璃芯较细（芯径一般为9或10μm），只能传一种模式的光。因此，其模间色散很小，适用于远程通讯，但其色度色散起主要作用，这样单模光纤对光源的谱宽和稳定性有较高的要求，即谱宽要窄，稳定性要好;远距离情况使用。<br><a id="more"></a><br>单模跳线的印字有”<strong>SM</strong>“或“G652”、“G655”、“G657”、“9/125”的字样，<strong>颜色是淡黄色</strong></p>
<p>多模光纤：中心玻璃芯较粗（50或62.5μm），可传多种模式的光。但其模间色散较大，这就限制了传输数字信号的频率，而且随距离的增加会更加严重。例如：600MB/KM的光纤在2KM时则只有300MB的带宽了。因此，多模光纤传输的距离就比较近，一般只有几公里。</p>
<p>多模跳线的印字有“<strong>MM</strong>“或”OM3″,”50/125″、”62.5/125″的字样，<strong>颜色是橙黄色</strong></p>
]]></content>
    <summary type="html"><![CDATA[<p>单模光纤：中心玻璃芯较细（芯径一般为9或10μm），只能传一种模式的光。因此，其模间色散很小，适用于远程通讯，但其色度色散起主要作用，这样单模光纤对光源的谱宽和稳定性有较高的要求，即谱宽要窄，稳定性要好;远距离情况使用。<br>]]></summary>
    
      <category term="光线，多模，单模，跳线" scheme="http://wlcyhao.github.io/tags/%E5%85%89%E7%BA%BF%EF%BC%8C%E5%A4%9A%E6%A8%A1%EF%BC%8C%E5%8D%95%E6%A8%A1%EF%BC%8C%E8%B7%B3%E7%BA%BF/"/>
    
      <category term="交换路由" scheme="http://wlcyhao.github.io/categories/%E4%BA%A4%E6%8D%A2%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[windows下定期自动备份本地文件(文件夹)]]></title>
    <link href="http://wlcyhao.github.io/2014/08/21/beifen_wenjianjia/"/>
    <id>http://wlcyhao.github.io/2014/08/21/beifen_wenjianjia/</id>
    <published>2014-08-21T13:36:32.000Z</published>
    <updated>2014-08-21T13:42:42.000Z</updated>
    <content type="html"><![CDATA[<p>虽然网上有一些免费的文件自动备份软件，但是没有自己编写一段批处理来完成备份任务来的放心，而且不用占用系统资源。</p>
<p>下面介绍一下如何利用批处理完成本地文件或者文件夹的备份。<br><a id="more"></a><br>该方法可把某文件夹下的文件同步到另外的文件夹，可忽略已经存在的文件，可根据文件日期来判断复制最新的文件。</p>
<p>首先建立一个文本文件，复制以下代码：</p>
<pre><code>@echo off
echo 正在复制”<span class="keyword">C</span>:\a”文件夹的内容至”<span class="keyword">D</span>:\b”文件夹下……
xcopy “<span class="keyword">C</span>:\a” “<span class="keyword">D</span>:\b” /e/<span class="keyword">I</span>/d/h/r/y
echo 正在复制”<span class="keyword">C</span>:\c”文件夹的内容至”<span class="keyword">D</span>:\d”文件夹下……
xcopy “<span class="keyword">C</span>:\c” “<span class="keyword">D</span>:\d” /e/<span class="keyword">I</span>/d/h/r/y
exit
</code></pre><p>保存该文本文件，修改文件名为X.bat 其中X可以任意命名。<br>打开”控制面板”—“计划任务”添加计划任务，计划任务里的执行目标为该批处理文件，设定在什么时候执行，我们可以设置为每天的05:00执行此批处理，这样每天就会执行该备份，让我们的文件永远有备份，再也不会为文件丢失而发愁了。</p>
<p>注释: 代码里的双引号(“”)以内的内容是文件夹路径，可以根据实际情况修改，前面是需要备份的文件夹路径，后面是备份文件夹路径。<br>如果需要备份更多的文件夹只需要多个xcopy 后面的格式和代码中相同，不要忘记两个路径之间有一个空格</p>
<pre><code>参数说明：
/e：拷贝所有子目录，包括空子目录；
/<span class="keyword">I</span>： 如果目标文件或目录不存在且拷贝的文件数多于一，则假设目标为目录；
/d：只拷贝文件日期与在目标文件后的文件（即修改过的源文件）
/h：同时拷贝隐藏文件和系统文件
/r：拷贝并覆盖只读文件
/y： 复制文件审核设置（不显示已有文件覆盖确认）
</code></pre><p>以上参数可以根据需要添加，推荐都加上最好。</p>
<p>下面就根据上面的代码扩展更多应用。<br>比如远程备份文件夹，给文件夹以日期命名。<br>下面给大家来讲解：<br>远程备份文件夹需要远程共享了文件夹<br>如果已经共享了该文件夹我们只需要修改代码中的需要备份的文件夹路径就可以了　</p>
<p>例如：我需要远程定期备份远程主机上的”a”文件夹,代码如下</p>
<pre><code>@echo off
echo 正在复制主机192.168.0.2的”a”文件夹的内容至”D:<span class="command">\b</span>”文件夹下……
xcopy “<span class="command">\\</span>192.168.0.2<span class="command">\a</span>” “D:<span class="command">\b</span>” /e/I/d/h/r/y
exit
</code></pre><p>其他和上面方法一样，保存为.bat文件，添加计划任务就行了。</p>
<p>如果我想以日期的形式保存文件夹，而且每天都有一个备份，那么我可以这样。</p>
<pre><code>@<span class="keyword">echo</span> off
<span class="keyword">echo</span> 正在复制主机<span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.<span class="number">2</span>的”a”文件夹的内容至”D:\b”文件夹下……
<span class="winutils">xcopy</span> “\\<span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.<span class="number">2</span>\a” “D:\<span class="envvar">%te%</span>\” /e/I/d/h/r/y
<span class="flow">exit</span>
</code></pre><p>这样就可以为每天的备份放到每个以日期命名的文件夹里了<br>其中/e参数可以不要，因为每天备份都是以一个新的文件夹开始的，那么就没有文件日期的问题了。</p>
]]></content>
    <summary type="html"><![CDATA[<p>虽然网上有一些免费的文件自动备份软件，但是没有自己编写一段批处理来完成备份任务来的放心，而且不用占用系统资源。</p>
<p>下面介绍一下如何利用批处理完成本地文件或者文件夹的备份。<br>]]></summary>
    
      <category term="批处理，自动备份" scheme="http://wlcyhao.github.io/tags/%E6%89%B9%E5%A4%84%E7%90%86%EF%BC%8C%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD/"/>
    
      <category term="Windows" scheme="http://wlcyhao.github.io/categories/Windows/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[windows7 连接共享时提示出现了一个错误(null)的解决办法]]></title>
    <link href="http://wlcyhao.github.io/2014/08/21/win7_vmware_netshare/"/>
    <id>http://wlcyhao.github.io/2014/08/21/win7_vmware_netshare/</id>
    <published>2014-08-21T13:23:25.000Z</published>
    <updated>2014-08-21T13:24:29.000Z</updated>
    <content type="html"><![CDATA[<p>在windows7下跑vmware测东西，虚拟机器上不了网，启动连接共享的时候提示：internet连接共享访问被启用时，出现了一个错误(null)<br><a id="more"></a><br>这是因为关掉了系统防火墙的原因。</p>
<p>解决办法很简单：</p>
<p>点击 Windows + R 在运行窗口中输入 services.msc 。</p>
<p>找到 windows Firewall 服务，点击启动即可。</p>
]]></content>
    <summary type="html"><![CDATA[<p>在windows7下跑vmware测东西，虚拟机器上不了网，启动连接共享的时候提示：internet连接共享访问被启用时，出现了一个错误(null)<br>]]></summary>
    
      <category term="win7" scheme="http://wlcyhao.github.io/tags/win7/"/>
    
      <category term="共享" scheme="http://wlcyhao.github.io/tags/%E5%85%B1%E4%BA%AB/"/>
    
      <category term="Windows" scheme="http://wlcyhao.github.io/categories/Windows/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[删除U盘时提示无法停止‘通用卷’设备的解决方法]]></title>
    <link href="http://wlcyhao.github.io/2014/08/21/stop_u/"/>
    <id>http://wlcyhao.github.io/2014/08/21/stop_u/</id>
    <published>2014-08-21T13:15:10.000Z</published>
    <updated>2014-08-21T13:16:47.000Z</updated>
    <content type="html"><![CDATA[<p>安全删除U盘时，大家常常会遇到提示“无法停止‘通用卷’设备，请稍候再停止该设备。”这种情况下可以强行拔下U盘吗？当然不可以！这时候如果强行拔除的话，很容易损坏计算机U口或者你的U盘。如果你的U盘上有重要的资料，很有可能就此毁坏了。那么应该怎么办呢？<br><a id="more"></a><br>第一种方法: </p>
<p>往往我们在把U盘的文件或者数据取出来的时候，都是用的“复制”“粘贴”方式，而如果复制的是U盘上的文件，这个文件就会一直放在系统的剪切板里，处于待用状态。而如果这种情况下我们要删除U盘的话，就会出现上面的无法停止U盘的提示。 </p>
<p>相应的解决办法就是：清空你的剪切板，或者在你的硬盘上随便进行一下复制某文件再粘贴的操作，这时候你再去删除U盘提示符，看看是不是顺利删除了？ </p>
<p>第二种方法： </p>
<p>如果觉得上面那种方法还无效的话，可以使用下面这个方法： </p>
<p>同时按下键盘的”Ctrl”＋”Alt”＋”Del”组合键，这时会出现”任务管理器”的窗口，单击”进程”标签，在”映像名称”中寻找”rundll32.exe”进程，选择”rundll32.exe”进程，然后点击”结束进程”，这时会弹出任务管理器警告，问你确定是否关闭此进程，点击”是”，即关闭了”rundll32.exe”进程。再删除U盘就可以正常删除了。 </p>
<p>使用这种方法时请注意：如果有多个”rundll32.exe”进程，需要将多个”rundll32.exe”进程全部关闭。 </p>
<p>第三种方法： </p>
<p>这种方法同样是借助了任务管理器，同时按下键盘的”Ctrl”＋”Alt”＋”Del”组合键，出现”任务管理器”的窗口，单击”进程”，寻找”EXPLORER.EXE”进程并结束它。这时候你会发现你的桌面不见了，请不要惊慌，继续进行下面的操作，在任务管理器中点击“文件”——“新建任务”——输入EXPLORER.EXE——确定。再删除U盘，你会发现可以安全删除了。 </p>
<p>第四种方法： </p>
<p>这种方法最简单，但最耗时，那就是，重启你的电脑。 </p>
<p>如果觉得出现问题的时候才解决有些麻烦，可以采用下面这个提前的预防措施： </p>
<p>关闭系统的预览功能。<br>方法：双击我的电脑——工具——文件夹选项——常规——任务——使用windows传统风格的文件夹，然后点击确定就行了。这样一劳永逸了。 </p>
<p>小窍门：目前有些U盘的技术很到位了，有的U盘直接插拔也可以的。但无论是多好的U盘，有一种时候是绝对不能直接插拔的，那就是仔细看你U盘的那个小红灯，小灯在不停闪的时候表示正在不停地读写数据，这时候千万不能拔，否则轻则损坏数据，重则U盘报废。</p>
]]></content>
    <summary type="html"><![CDATA[<p>安全删除U盘时，大家常常会遇到提示“无法停止‘通用卷’设备，请稍候再停止该设备。”这种情况下可以强行拔下U盘吗？当然不可以！这时候如果强行拔除的话，很容易损坏计算机U口或者你的U盘。如果你的U盘上有重要的资料，很有可能就此毁坏了。那么应该怎么办呢？<br>]]></summary>
    
      <category term="U盘，弹出" scheme="http://wlcyhao.github.io/tags/U%E7%9B%98%EF%BC%8C%E5%BC%B9%E5%87%BA/"/>
    
      <category term="Windows" scheme="http://wlcyhao.github.io/categories/Windows/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何用拼音输入法输入不会读的字？]]></title>
    <link href="http://wlcyhao.github.io/2014/08/21/pingyin_input/"/>
    <id>http://wlcyhao.github.io/2014/08/21/pingyin_input/</id>
    <published>2014-08-21T13:08:39.000Z</published>
    <updated>2014-08-21T13:13:43.000Z</updated>
    <content type="html"><![CDATA[<p>遇到不会读的字，怎么用拼音打？网友提供小技巧：<br><a id="more"></a><br>可以先打个“u”然后打各个部首的读音，就能出来哦，如图所示！在搜狗拼音、谷歌拼音、QQ输入法下都成功测试过。</p>
<p><img src="http://i.imgur.com/WY86f27.jpg" alt=""></p>
]]></content>
    <summary type="html"><![CDATA[<p>遇到不会读的字，怎么用拼音打？网友提供小技巧：<br>]]></summary>
    
      <category term="拼音，输入法" scheme="http://wlcyhao.github.io/tags/%E6%8B%BC%E9%9F%B3%EF%BC%8C%E8%BE%93%E5%85%A5%E6%B3%95/"/>
    
      <category term="Windows" scheme="http://wlcyhao.github.io/categories/Windows/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在Markdown文档中插入表格(table)]]></title>
    <link href="http://wlcyhao.github.io/2014/08/21/markdown_insert_table/"/>
    <id>http://wlcyhao.github.io/2014/08/21/markdown_insert_table/</id>
    <published>2014-08-21T02:01:00.000Z</published>
    <updated>2014-08-21T07:26:13.000Z</updated>
    <content type="html"><![CDATA[<p>插入表格算是Markdown的扩展语法</p>
<p>使用很简单，示例如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">| <span class="class">Tables</span>        | <span class="class">Are</span>           | <span class="class">Cool</span>  |  </div><div class="line">| ------------- |-------------- | ------|  </div><div class="line">| col <span class="number">3</span> is      | right-aligned | <span class="char">$1</span>600 |  </div><div class="line">| col <span class="number">2</span> is      <span class="localvars">| centered      |</span>   <span class="char">$1</span>2 | </div><div class="line"><span class="localvars">| zebra stripes | are neat      |</span>    <span class="char">$1</span> |</div></pre></td></tr></table></figure>

<a id="more"></a>

<p>效果如下：</p>
<table>
<thead>
<tr>
<th>Tables</th>
<th>Are</th>
<th>Cool</th>
</tr>
</thead>
<tbody>
<tr>
<td>col 3 is</td>
<td>right-aligned</td>
<td>$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td>centered</td>
<td>$12</td>
</tr>
<tr>
<td>zebra stripes</td>
<td>are neat</td>
<td>$1</td>
</tr>
</tbody>
</table>
<p><strong>注：</strong>表头和数据行之间用<code>|----|</code>隔开</p>
]]></content>
    <summary type="html"><![CDATA[<p>插入表格算是Markdown的扩展语法</p>
<p>使用很简单，示例如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">| <span class="class">Tables</span>        | <span class="class">Are</span>           | <span class="class">Cool</span>  |  </div><div class="line">| ------------- |-------------- | ------|  </div><div class="line">| col <span class="number">3</span> is      | right-aligned | <span class="char">$1</span>600 |  </div><div class="line">| col <span class="number">2</span> is      <span class="localvars">| centered      |</span>   <span class="char">$1</span>2 | </div><div class="line"><span class="localvars">| zebra stripes | are neat      |</span>    <span class="char">$1</span> |</div></pre></td></tr></table></figure>

]]></summary>
    
      <category term="markdown" scheme="http://wlcyhao.github.io/tags/markdown/"/>
    
      <category term="table" scheme="http://wlcyhao.github.io/tags/table/"/>
    
      <category term="Markdown" scheme="http://wlcyhao.github.io/categories/Markdown/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ping服务器网速的工具]]></title>
    <link href="http://wlcyhao.github.io/2014/08/20/ping_network_speed/"/>
    <id>http://wlcyhao.github.io/2014/08/20/ping_network_speed/</id>
    <published>2014-08-20T07:35:44.000Z</published>
    <updated>2014-08-20T07:36:34.000Z</updated>
    <content type="html"><![CDATA[<p>购买vps之前评测中国用户访问速度，或者网站运营异常的时候测试网速，判断dns是否配置正确，都可以简单 ping一下，初步了解情况</p>
<ol>
<li>面向国内用户的中文网站，用 <a href="http://ping.chinaz.com/" target="_blank" rel="external">http://ping.chinaz.com/</a></li>
<li>面向全球用户的英文网站，用 <a href="http://www.just-ping.com/" target="_blank" rel="external">http://www.just-ping.com/</a></li>
</ol>
]]></content>
    
    
      <category term="ping" scheme="http://wlcyhao.github.io/tags/ping/"/>
    
      <category term="vps" scheme="http://wlcyhao.github.io/tags/vps/"/>
    
      <category term="服务器运维" scheme="http://wlcyhao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[取消ubuntu让人崩溃的sudo]]></title>
    <link href="http://wlcyhao.github.io/2014/08/20/cacel_ubuntu_sudo/"/>
    <id>http://wlcyhao.github.io/2014/08/20/cacel_ubuntu_sudo/</id>
    <published>2014-08-20T07:23:35.000Z</published>
    <updated>2014-08-20T07:29:17.000Z</updated>
    <content type="html"><![CDATA[<p>使用Vagrant，因为大部分box都是基于ubuntu的，初始化之后，它会自动生成一个账号 <em>vagrant</em>，这货不是root，于是执行各种命令前都要加一个<code>sudo</code></p>
<p>本地虚拟机，就自己一个人用，还要sudo，这种脑残设定太恶心了</p>
<p>在ubuntu中取消默认的sudo，方法如下：</p>
<pre><code><span class="built_in">cd</span> ~
<span class="built_in">echo</span> <span class="string">"sudo bash"</span>&gt;&gt;.bash_login
</code></pre><p>重新登录之后，你就发现 root 在等你</p>
]]></content>
    
    
      <category term="ubuntu" scheme="http://wlcyhao.github.io/tags/ubuntu/"/>
    
      <category term="vagrant" scheme="http://wlcyhao.github.io/tags/vagrant/"/>
    
      <category term="服务器运维" scheme="http://wlcyhao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[3步做好vps安全防范]]></title>
    <link href="http://wlcyhao.github.io/2014/08/20/vps_safety/"/>
    <id>http://wlcyhao.github.io/2014/08/20/vps_safety/</id>
    <published>2014-08-20T07:19:21.000Z</published>
    <updated>2014-08-20T07:21:33.000Z</updated>
    <content type="html"><![CDATA[<p>如果有垃圾扫描vps的sshd端口，烦不胜烦，赶紧加强一下防范，图个清静</p>
<ol>
<li><code>passwd</code> 把登陆密码改成30位以上，越多越好，字母数字符号大小写都要包括，然后日常管理用ssh密钥对的方式登陆</li>
<li><p>改掉sshd标准的22端口，修改<code>/etc/ssh/sshd_config</code>这个文件即可，记得要重启sshd<br>&gt;<br> /etc/init.d/ssh restart</p>
</li>
<li><p>把 <code>iptables -I INPUT -p tcp -s 要封的IP --dport 骚扰的端口 -j DROP</code> 这条命令放在手边，随时可以执行</p>
</li>
</ol>
<p>攻击日志在/var/log/secure里面，经常查看，如果这个文件不存在,那么可以在 <code>/etc/syslog.conf</code> 里面配置</p>
]]></content>
    
    
      <category term="linux" scheme="http://wlcyhao.github.io/tags/linux/"/>
    
      <category term="安全" scheme="http://wlcyhao.github.io/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="ssh" scheme="http://wlcyhao.github.io/tags/ssh/"/>
    
      <category term="服务器运维" scheme="http://wlcyhao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[提高ssh登录服务器的响应速度]]></title>
    <link href="http://wlcyhao.github.io/2014/08/20/ssh_login/"/>
    <id>http://wlcyhao.github.io/2014/08/20/ssh_login/</id>
    <published>2014-08-20T07:09:04.000Z</published>
    <updated>2014-08-20T07:11:11.000Z</updated>
    <content type="html"><![CDATA[<p>server A—&gt; server B</p>
<p>从A登录B，修改服务器B上的ssh配置文件: <code>/etc/ssh/sshd_config</code> 在文件尾部添加一行</p>
<p><code>UseDNS no</code></p>
<p>重启sshd，明显可以感觉到ssh登录速度的提升</p>
]]></content>
    
    
      <category term="ssh" scheme="http://wlcyhao.github.io/tags/ssh/"/>
    
      <category term="login" scheme="http://wlcyhao.github.io/tags/login/"/>
    
      <category term="服务器运维" scheme="http://wlcyhao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[消除 vi 突然显示空格的颜色]]></title>
    <link href="http://wlcyhao.github.io/2014/08/20/vi_backspace_colour/"/>
    <id>http://wlcyhao.github.io/2014/08/20/vi_backspace_colour/</id>
    <published>2014-08-20T07:05:47.000Z</published>
    <updated>2014-08-20T07:06:57.000Z</updated>
    <content type="html"><![CDATA[<p>不知道为什么，用vi打开代码文件，空格的地方全部是黄色亮块，清楚办法</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">cd</span> ~</div><div class="line"></div><div class="line"><span class="keyword">open</span> .vimrc</div><div class="line"></div><div class="line">加入一行 <span class="keyword">set</span> nohls</div></pre></td></tr></table></figure>

<p>set nohls在vim里面可以直接用，只限于当前session，写入到vimrc中，可以持久化保存，vimrc里面还可以放入更多的配置指令</p>
<p>另外</p>
<p><code>cd -</code> 是个好命令，可以回到上一次路径</p>
]]></content>
    
    
      <category term="vim" scheme="http://wlcyhao.github.io/tags/vim/"/>
    
      <category term="服务器运维" scheme="http://wlcyhao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[修复secureCRT 登录 vps 中文乱码问题]]></title>
    <link href="http://wlcyhao.github.io/2014/08/20/securecrt_vps_bug/"/>
    <id>http://wlcyhao.github.io/2014/08/20/securecrt_vps_bug/</id>
    <published>2014-08-20T07:00:45.000Z</published>
    <updated>2014-08-20T07:02:19.000Z</updated>
    <content type="html"><![CDATA[<p>让vps正常显示中文，只需要三步</p>
<ol>
<li><p><code>vim ~/.profile</code> 加入下面一行 export LANG=”zh_CN.UTF-8”</p>
</li>
<li><p>修改SecureCRT 编码<br>选项-&gt;会话选项-&gt;外观-&gt;字符编码-&gt;uft-8，退出重新登录就行了</p>
</li>
<li><p>让vim支持中文显示，修改文件（如果没有就新建一个）:~/.vimrc，添加下面三行<br>```</p>
<ol>
<li>set encoding=utf-8</li>
<li>set fileencodings=utf-8,gb2312,gb18030,gbk</li>
<li>set termencoding=utf-8</li>
</ol>
</li>
</ol>
]]></content>
    
    
      <category term="linux" scheme="http://wlcyhao.github.io/tags/linux/"/>
    
      <category term="vps" scheme="http://wlcyhao.github.io/tags/vps/"/>
    
      <category term="服务器运维" scheme="http://wlcyhao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用shell脚本监控vps实时流量]]></title>
    <link href="http://wlcyhao.github.io/2014/08/20/shell_monitor_vps/"/>
    <id>http://wlcyhao.github.io/2014/08/20/shell_monitor_vps/</id>
    <published>2014-08-20T06:52:13.000Z</published>
    <updated>2014-08-20T06:54:39.000Z</updated>
    <content type="html"><![CDATA[<p>一般来说，实时流量监控有两种方法</p>
<ul>
<li>安装iftop，它会通过ascii图形化显示实时流量数据，比较直观</li>
<li>用shell脚本采集<code>/proc/net/dev</code>中的实时数据，很简单，不依赖任何安装包，对于内网linux服务器特别有帮助</li>
</ul>
<a id="more"></a>

<p>脚本如下:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="shebang">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment"># test network width</span></div><div class="line"></div><div class="line">function usage</div><div class="line"></div><div class="line">{</div><div class="line"></div><div class="line">        <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span>  "</span></div><div class="line"></div><div class="line">        <span class="built_in">echo</span> <span class="string">"    e.g. <span class="variable">$0</span> eth0 2"</span></div><div class="line"></div><div class="line">        <span class="keyword">exit</span> <span class="number">65</span></div><div class="line"></div><div class="line">}</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> <span class="operator">-lt</span> <span class="number">2</span> ];<span class="keyword">then</span></div><div class="line">usage</div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="built_in">typeset</span> <span class="keyword">in</span> <span class="keyword">in</span>_old dif_<span class="keyword">in</span></div><div class="line"><span class="built_in">typeset</span> out out_old dif_out</div><div class="line"><span class="built_in">typeset</span> timer</div><div class="line"><span class="built_in">typeset</span> eth</div><div class="line"></div><div class="line">eth=<span class="variable">$1</span></div><div class="line">timer=<span class="variable">$2</span></div><div class="line"></div><div class="line"><span class="keyword">in</span>_old=$(cat /proc/net/dev | grep <span class="variable">$eth</span> | sed <span class="operator">-e</span> <span class="string">"s/\(.*\)\:\(.*\)/\2/g"</span> | awk <span class="string">' { print $1 }'</span> )</div><div class="line">out_old=$(cat /proc/net/dev | grep <span class="variable">$eth</span> | sed <span class="operator">-e</span> <span class="string">"s/\(.*\)\:\(.*\)/\2/g"</span> | awk <span class="string">' { print $9 }'</span> )</div><div class="line"></div><div class="line"><span class="keyword">while</span> <span class="literal">true</span></div><div class="line"><span class="keyword">do</span></div><div class="line">sleep <span class="variable">${timer}</span></div><div class="line"><span class="keyword">in</span>=$(cat /proc/net/dev | grep <span class="variable">$eth</span> | sed <span class="operator">-e</span> <span class="string">"s/\(.*\)\:\(.*\)/\2/g"</span> | awk <span class="string">' { print $1 }'</span> )</div><div class="line">out=$(cat /proc/net/dev | grep <span class="variable">$eth</span> | sed <span class="operator">-e</span> <span class="string">"s/\(.*\)\:\(.*\)/\2/g"</span> | awk <span class="string">' { print $9 }'</span> )</div><div class="line">dif_<span class="keyword">in</span>=$(((<span class="keyword">in</span>-in_old)/timer))</div><div class="line">dif_out=$(((out-out_old)/timer))</div><div class="line"><span class="built_in">echo</span> <span class="string">"IN: <span class="variable">${dif_in}</span> Byte/s OUT: <span class="variable">${dif_out}</span> Byte/s "</span></div><div class="line"><span class="keyword">in</span>_old=<span class="variable">${in}</span></div><div class="line">out_old=<span class="variable">${out}</span></div><div class="line"><span class="keyword">done</span></div><div class="line"><span class="keyword">exit</span> <span class="number">0</span></div></pre></td></tr></table></figure>

<p>使用很简单，只有两个参数</p>
<ul>
<li>参数1， 网卡设备号，一般就是 eth0</li>
<li>参数2，统计间隔的秒数，2 表示2秒计算一次</li>
<li>流量统计单位是 Byte/s</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<p>一般来说，实时流量监控有两种方法</p>
<ul>
<li>安装iftop，它会通过ascii图形化显示实时流量数据，比较直观</li>
<li>用shell脚本采集<code>/proc/net/dev</code>中的实时数据，很简单，不依赖任何安装包，对于内网linux服务器特别有帮助</li>
</ul>
]]></summary>
    
      <category term="linux" scheme="http://wlcyhao.github.io/tags/linux/"/>
    
      <category term="iftop" scheme="http://wlcyhao.github.io/tags/iftop/"/>
    
      <category term="流量监控" scheme="http://wlcyhao.github.io/tags/%E6%B5%81%E9%87%8F%E7%9B%91%E6%8E%A7/"/>
    
      <category term="服务器运维" scheme="http://wlcyhao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一分钟学会crontab使用]]></title>
    <link href="http://wlcyhao.github.io/2014/08/20/master_crontab/"/>
    <id>http://wlcyhao.github.io/2014/08/20/master_crontab/</id>
    <published>2014-08-20T06:45:32.000Z</published>
    <updated>2014-08-20T06:47:14.000Z</updated>
    <content type="html"><![CDATA[<p>crontab 是在linux服务器上部署定时任务的方法</p>
<p><code>0 5 * * * /usr/bin/python /data/www/tools/mysql_backup.py</code></p>
<p>cmd之前有5个项目要填，分别对应</p>
<p><code>分钟 小时 天 月 一周当中第几天( 0-6 ,0表示星期天)</code><br><a id="more"></a><br>填写方法</p>
<ul>
<li><ul>
<li>表示都满足，例如 <em> </em> <em> </em> <em> 表示每分钟执行一次，如果每小时执行一次，那应该这样写<br>1 </em> <em> </em> * (每小时第一分钟执行，1可以随便改成60以内的数字)</li>
</ul>
</li>
<li>/n 表示隔n个单位执行一次  <ul>
<li>/3 <em> </em> <em> </em> 3分钟执行一次  </li>
<li>1 <em>/3 </em> <em> </em> 表示每隔3个小时的第一分钟执行一次  </li>
<li>1 1 <em>/3 </em> * 表示每隔3天，当天的1点1分执行一次  </li>
<li>1 12 <em> </em> 2,3,4,5,6 表示每周二到周6,每天中午12点1分执行  </li>
</ul>
</li>
</ul>
<p><strong>只需要掌握这2种时间用法，crontab就ok了</strong></p>
<p>提示：</p>
<ul>
<li>crontab 最小粒度是一分钟执行一次，要更快，得用其它办法，比如说写一个daemon程序,用while true: 来做</li>
<li><code>crontab -l</code> 查看所有crontab 列表</li>
<li><code>cronta -e</code>编辑crontab</li>
<li>crontab条目是以文件方式存储的，可以用<code>ls /etc/cron*</code>查看</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<p>crontab 是在linux服务器上部署定时任务的方法</p>
<p><code>0 5 * * * /usr/bin/python /data/www/tools/mysql_backup.py</code></p>
<p>cmd之前有5个项目要填，分别对应</p>
<p><code>分钟 小时 天 月 一周当中第几天( 0-6 ,0表示星期天)</code><br>]]></summary>
    
      <category term="linux" scheme="http://wlcyhao.github.io/tags/linux/"/>
    
      <category term="crontab" scheme="http://wlcyhao.github.io/tags/crontab/"/>
    
      <category term="服务器运维" scheme="http://wlcyhao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[192.168.1.1/24是什么含义]]></title>
    <link href="http://wlcyhao.github.io/2014/08/20/1921681124/"/>
    <id>http://wlcyhao.github.io/2014/08/20/1921681124/</id>
    <published>2014-08-20T06:07:00.000Z</published>
    <updated>2014-08-20T06:10:31.000Z</updated>
    <content type="html"><![CDATA[<h1 id="IP的定义">IP的定义</h1>
<p>ip 是32位无符号整数，最小，最大分别是</p>
<ul>
<li>0.0.0.0 - 255.255.255.255 具体来说，由一个ip由 Net-ID+Host-ID 两部分组成，Net-ID 相同，那么就说明在一个网段内，可以用mac数据帧直接通信。</li>
</ul>
<p>给定一个Net-ID</p>
<ul>
<li>host-ID全为0的ip，(192.168.2.0)代表整子小网络，</li>
<li><p>host-ID全为1的ip，是这个子网络的广播地址<br>ip总共就32个字节，当 HostID 所占用的位越大，亦即 HostID 数量越多时，表示同一个网络内可用以设定主机的 IP 数量越多<br><a id="more"></a><br>国际NIC组织把ip分成5类</p>
</li>
<li><p>Class A : 0xxxxxxx.xxxxxxxx.xxxxxxxx.xxxxxxxx ==&gt; NetI_D 的开头是 0<br>|—net—|————-host——————|</p>
</li>
<li>Class B : 10xxxxxx.xxxxxxxx.xxxxxxxx.xxxxxxxx ==&gt; NetI_D 的开头是 10<br>|———net———-|———host———|</li>
<li>Class C : 110xxxxx.xxxxxxxx.xxxxxxxx.xxxxxxxx ==&gt; NetI_D 的开头是 110<br>|—————-net—————-|-host—|</li>
<li>Class D : 1110xxxx.xxxxxxxx.xxxxxxxx.xxxxxxxx ==&gt; NetI_D 的开头是 1110</li>
<li>Class E : 1111xxxx.xxxxxxxx.xxxxxxxx.xxxxxxxx ==&gt; NetI_D 的开头是 1111</li>
</ul>
<p>class D用作特殊用途，class E保留，因此，能够用来设定在一般系统上面的，就只有 Class A、B、C 三种等级的IP。</p>
<h1 id="Netmask">Netmask</h1>
<p>这个数值就是用一种很直观的方式表明Net-ID/Host-ID各有多少位</p>
<p>netmark的定义非常简单，netmask 也是 32 位，在数值上，位于 Net-ID 的为 1 而 Host-ID 为 0</p>
<p>例如一个常见的C类IP地址</p>
<p>&gt;<br>    net-id=24位，host-id=8位，拥有2**8-2=254个ip</p>
<p>一个传统的c类网络，比如 192.168.10.0，它的netmark是必然是255.255.255.0 如果在把这个网络分成2个子网络，很简单，设定net-id使用25位，host-id就只有7位了 那么这个时候的 netmark= 255.255.255.1 0000000 = 255.255.255.128，这次划分得到的两个子网分别是</p>
<ul>
<li>129.168.10.0/25</li>
<li>192.168.10.128/25</li>
</ul>
<p>&gt;<br>    python 自带的bin函数，可以非常方便的把int转换为二进制字符串表示</p>
<p>很显然，<code>/25</code>    <strong>就是标示 这个ip中net-id 占用的位数</strong>（这2个ip的host-id全部为0，所以这两个ip代表的是其所在的子网络）</p>
<p>这种表示方法很好计算子网络的规模，例如</p>
<ul>
<li>192.168.0.0/27 表示2的5(32-27=5)次方-2(每个网段的第一个和最后一个地址都被特殊用途占用)=62个ip</li>
<li>192.168.0.0/28,表示2的4(32-28=4)次方-2=30个ip</li>
</ul>
<p>所以 192.168.1.1/24 标示的是一个子网络192.168.1.0（拥有254个ip地址： 从192.168.1.1到192.168.1.254）</p>
]]></content>
    <summary type="html"><![CDATA[<h1 id="IP的定义">IP的定义</h1>
<p>ip 是32位无符号整数，最小，最大分别是</p>
<ul>
<li>0.0.0.0 - 255.255.255.255 具体来说，由一个ip由 Net-ID+Host-ID 两部分组成，Net-ID 相同，那么就说明在一个网段内，可以用mac数据帧直接通信。</li>
</ul>
<p>给定一个Net-ID</p>
<ul>
<li>host-ID全为0的ip，(192.168.2.0)代表整子小网络，</li>
<li><p>host-ID全为1的ip，是这个子网络的广播地址<br>ip总共就32个字节，当 HostID 所占用的位越大，亦即 HostID 数量越多时，表示同一个网络内可用以设定主机的 IP 数量越多<br>]]></summary>
    
      <category term="IP" scheme="http://wlcyhao.github.io/tags/IP/"/>
    
      <category term="网络" scheme="http://wlcyhao.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="服务器运维" scheme="http://wlcyhao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ssh指定私钥的配置管理]]></title>
    <link href="http://wlcyhao.github.io/2014/08/20/ssh_key/"/>
    <id>http://wlcyhao.github.io/2014/08/20/ssh_key/</id>
    <published>2014-08-20T03:40:50.000Z</published>
    <updated>2014-08-20T03:42:51.000Z</updated>
    <content type="html"><![CDATA[<h1 id="ssh指定私钥的配置管理">ssh指定私钥的配置管理</h1>
<p>用ssh 公钥认证方式登录非常常见，快速方便，通常就是用<code>ssh-keygen -t rsa</code> 在 ~/.ssh 目录下生成默认名称的id_rsa和id_rsa.pub 文件</p>
<p>特别是git流行之后，用ssh的方式访问git服务器，部署起来最容易</p>
<p>实际上，ssh 私钥的名称和生成地点都可以单独指定的, <strong>和硬件操作系统无关</strong><br><a id="more"></a><br>你可以在任意一台服务器上生成 公钥,私钥对，保存起来，到处分发使用</p>
<p>指定的配置文件叫做 ssh_config , man ssh_config ，有详细说明</p>
<h2 id="个性化指定_私钥的步骤">个性化指定 私钥的步骤</h2>
<p>vi ~/.ssh/config文件，加入如下 配置行</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="number">1.</span>   Host xxxx</div><div class="line"><span class="number">2.</span>   IdentityFile 私钥文件名（不是id_rsa.pub)</div><div class="line"><span class="number">3.</span>   Port 端口号</div><div class="line"><span class="number">4.</span>   User 你登陆xxxx服务器用的账号</div><div class="line">     <span class="keyword">...</span></div></pre></td></tr></table></figure>

<p><strong>注意：</strong></p>
<ul>
<li>这个文件没有格式，一行一条记录，不需要tab缩进</li>
<li>你可以在这个文件里面指定多个Host</li>
<li>一个 Host开头的行 到下一个 Host开头的行 是 这个host的细节设置</li>
<li>全局的ssh config 文件在<code>/etc/ssh/ssh_config</code></li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h1 id="ssh指定私钥的配置管理">ssh指定私钥的配置管理</h1>
<p>用ssh 公钥认证方式登录非常常见，快速方便，通常就是用<code>ssh-keygen -t rsa</code> 在 ~/.ssh 目录下生成默认名称的id_rsa和id_rsa.pub 文件</p>
<p>特别是git流行之后，用ssh的方式访问git服务器，部署起来最容易</p>
<p>实际上，ssh 私钥的名称和生成地点都可以单独指定的, <strong>和硬件操作系统无关</strong><br>]]></summary>
    
      <category term="ssh" scheme="http://wlcyhao.github.io/tags/ssh/"/>
    
      <category term="服务器运维" scheme="http://wlcyhao.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Markdown语法入门]]></title>
    <link href="http://wlcyhao.github.io/2014/08/19/markdown_rumen/"/>
    <id>http://wlcyhao.github.io/2014/08/19/markdown_rumen/</id>
    <published>2014-08-19T09:29:11.000Z</published>
    <updated>2014-08-19T09:37:21.000Z</updated>
    <content type="html"><![CDATA[<h2 id="基本符号">基本符号</h2>
<ul>
<li>*,-,+ 3个符号效果都一样，这3个符号被称为<strong>Markdown</strong>符号</li>
<li>空白行表示另起一个段落</li>
<li>`是表示inline代码，tab是用来标记 代码段，分别对应html的code，pre标签</li>
</ul>
<h2 id="换行">换行</h2>
<ul>
<li>单一段落( \<p\>) 用一个空白行</p\></li>
<li>连续两个空格 会变成一个 \<br\></br\></li>
<li>连续3个符号，然后是空行，表示 hr横线</li>
</ul>
<a id="more"></a>

<h2 id="标题">标题</h2>
<ul>
<li>生成h1—h6,在文字前面加上 1—6个# 来实现</li>
<li>文字加粗是通过 文字左右各两个符号</li>
</ul>
<h2 id="引用">引用</h2>
<ul>
<li>在第一行加上 “&gt;”和一个空格，表示代码引用，还可以嵌套</li>
</ul>
<h2 id="列表">列表</h2>
<p>这个是markdown文件的主要表示方式，主题要点化</p>
<ul>
<li>使用*,+,-加上一个空格来表示</li>
<li>可以支持嵌套</li>
<li>有序列表用 数字+英文点+空格来表示</li>
<li>列表内容很长，不需要手工输入换行符，css控制段落的宽度，会自动的缩放的</li>
</ul>
<h2 id="链接">链接</h2>
<ul>
<li>直接写 [锚文本](url “可选的title”)</li>
<li>引用 先定义 [ref_name]:url，然后在需要写入url的地方， 这样使用[锚文本][ref_name]，通常的ref_name一般用数字表示，这样显得专业</li>
<li>简写url：用尖括号包裹url<br>这样生成的url锚文本就是url本身</li>
</ul>
<h2 id="插入图片">插入图片</h2>
<ul>
<li>一行表示: ![alt_text](url “可选的title”)</li>
<li>引用表示法: ![alt_text][id],预先定义 [id]:url “可选title”</li>
<li>直接使用<img>标签，这样可以指定图片的大小尺寸</li>
</ul>
<h2 id="特殊符号">特殊符号</h2>
<ul>
<li>用\来转义，表示文本中的markdown符号</li>
<li>可以在文本种直接使用html标签，但是要注意在使用的时候，前后加上空行</li>
<li>文本前后各加一个符号，表示斜体</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<h2 id="基本符号">基本符号</h2>
<ul>
<li>*,-,+ 3个符号效果都一样，这3个符号被称为<strong>Markdown</strong>符号</li>
<li>空白行表示另起一个段落</li>
<li>`是表示inline代码，tab是用来标记 代码段，分别对应html的code，pre标签</li>
</ul>
<h2 id="换行">换行</h2>
<ul>
<li>单一段落( \<p\>) 用一个空白行</p\></li>
<li>连续两个空格 会变成一个 \<br\></br\></li>
<li>连续3个符号，然后是空行，表示 hr横线</li>
</ul>
]]></summary>
    
      <category term="Markdown" scheme="http://wlcyhao.github.io/tags/Markdown/"/>
    
      <category term="语法" scheme="http://wlcyhao.github.io/tags/%E8%AF%AD%E6%B3%95/"/>
    
      <category term="Markdown" scheme="http://wlcyhao.github.io/categories/Markdown/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo博客优化：添加返回顶部功能]]></title>
    <link href="http://wlcyhao.github.io/2014/08/15/hexo_add_backtotop/"/>
    <id>http://wlcyhao.github.io/2014/08/15/hexo_add_backtotop/</id>
    <published>2014-08-15T15:21:26.000Z</published>
    <updated>2014-08-15T15:22:59.000Z</updated>
    <content type="html"><![CDATA[<p>1.添加HTML代码。新建文件 /themes/light/layout/_partial/totop.ejs ，在文件中加入HTML代码：</p>
<pre><code> <span class="tag">&lt;<span class="title">DIV</span> <span class="attribute">style</span>=<span class="value">"DISPLAY: none"</span> <span class="attribute">id</span>=<span class="value">goTopBtn</span> <span class="attribute">title</span>=<span class="value">"Scroll Back to Top"</span>&gt;</span><span class="tag">&lt;<span class="title">IMG</span> <span class="attribute">border</span>=<span class="value">0</span> <span class="attribute">src</span>=<span class="value">"&lt;%- config.root %&gt;images/top.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="title">DIV</span>&gt;</span>
 <span class="tag">&lt;<span class="title">SCRIPT</span> <span class="attribute">type</span>=<span class="value">text</span>/<span class="attribute">javascript</span>&gt;</span><span class="javascript">goTopEx();</span><span class="tag">&lt;/<span class="title">SCRIPT</span>&gt;</span>
</code></pre><p>2、在文件hemes/light/layout/_partial/head.ejs 添加</p>
<pre><code><span class="tag">&lt;<span class="title">SCRIPT</span> <span class="attribute">type</span>=<span class="value">text</span>/<span class="attribute">javascript</span> <span class="attribute">src</span>=<span class="value">"&lt;%- config.root %&gt;js/scrolltop.js"</span>&gt;</span><span class="javascript"></span><span class="tag">&lt;/<span class="title">SCRIPT</span>&gt;</span>
</code></pre><a id="more"></a> 

<p>3.添加JS代码。新建文件 /themes/light/source/js/scrolltop.js，在文件中添加javascript代码：</p>
<pre><code> <span class="comment">// JavaScript Document</span>
<span class="function"><span class="keyword">function</span> <span class="title">goTopEx</span><span class="params">()</span></span>{
<span class="keyword">var</span> obj=<span class="built_in">document</span>.getElementById(<span class="string">"goTopBtn"</span>);
<span class="function"><span class="keyword">function</span> <span class="title">getScrollTop</span><span class="params">()</span></span>{
    <span class="keyword">return</span> <span class="built_in">document</span>.documentElement.scrollTop+<span class="built_in">document</span>.body.scrollTop;
}
<span class="function"><span class="keyword">function</span> <span class="title">setScrollTop</span><span class="params">(value)</span></span>{
    <span class="keyword">if</span>(<span class="built_in">document</span>.documentElement.scrollTop){
        <span class="built_in">document</span>.documentElement.scrollTop=value;
    }<span class="keyword">else</span>{
        <span class="built_in">document</span>.body.scrollTop=value;
    }
} 
<span class="built_in">window</span>.onscroll=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>{getScrollTop()&gt;<span class="number">0</span>?obj.style.display=<span class="string">""</span>:obj.style.display=<span class="string">"none"</span>;}
obj.onclick=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>{
    <span class="keyword">var</span> goTop=setInterval(scrollMove,<span class="number">10</span>);
    <span class="function"><span class="keyword">function</span> <span class="title">scrollMove</span><span class="params">()</span></span>{
        setScrollTop(getScrollTop()/<span class="number">1.1</span>);
        <span class="keyword">if</span>(getScrollTop()&lt;<span class="number">1</span>)clearInterval(goTop);
    }
}
}
</code></pre><p>4、在目录themes/light/source/css/_partial新建文件scrolltop.styl，内容如下：</p>
<pre><code> <span class="id">#goTopBtn</span>
  <span class="attribute">POSITION</span> <span class="value">fixed</span>
  <span class="attribute">TEXT-ALIGN</span> <span class="value">center</span>
  -<span class="attribute">HEIGHT</span> 30px
   <span class="attribute">WIDTH</span> 45px
   <span class="attribute">BOTTOM</span> 35px
   <span class="attribute">HEIGHT</span> 47px
   <span class="attribute">FONT-SIZE</span> 12px
   <span class="attribute">CURSOR</span> <span class="value">pointer</span>
   <span class="attribute">RIGHT</span> 10px
   _position <span class="value">absolute</span>
   _right <span class="attribute">auto</span>
</code></pre><p>5、在文件themes/light/source/css/style.styl添加：</p>
<pre><code>@<span class="keyword">import</span> <span class="string">'_partial/scrolltop'</span>
</code></pre><p>6、添加按钮图片，将图片复制到themes/light/source/images，文件名为top.jpg</p>
]]></content>
    <summary type="html"><![CDATA[<p>1.添加HTML代码。新建文件 /themes/light/layout/_partial/totop.ejs ，在文件中加入HTML代码：</p>
<pre><code> <span class="tag">&lt;<span class="title">DIV</span> <span class="attribute">style</span>=<span class="value">"DISPLAY: none"</span> <span class="attribute">id</span>=<span class="value">goTopBtn</span> <span class="attribute">title</span>=<span class="value">"Scroll Back to Top"</span>&gt;</span><span class="tag">&lt;<span class="title">IMG</span> <span class="attribute">border</span>=<span class="value">0</span> <span class="attribute">src</span>=<span class="value">"&lt;%- config.root %&gt;images/top.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="title">DIV</span>&gt;</span>
 <span class="tag">&lt;<span class="title">SCRIPT</span> <span class="attribute">type</span>=<span class="value">text</span>/<span class="attribute">javascript</span>&gt;</span><span class="javascript">goTopEx();</span><span class="tag">&lt;/<span class="title">SCRIPT</span>&gt;</span>
</code></pre><p>2、在文件hemes/light/layout/_partial/head.ejs 添加</p>
<pre><code><span class="tag">&lt;<span class="title">SCRIPT</span> <span class="attribute">type</span>=<span class="value">text</span>/<span class="attribute">javascript</span> <span class="attribute">src</span>=<span class="value">"&lt;%- config.root %&gt;js/scrolltop.js"</span>&gt;</span><span class="javascript"></span><span class="tag">&lt;/<span class="title">SCRIPT</span>&gt;</span>
</code></pre>]]></summary>
    
      <category term="hexo" scheme="http://wlcyhao.github.io/tags/hexo/"/>
    
      <category term="返回顶部" scheme="http://wlcyhao.github.io/tags/%E8%BF%94%E5%9B%9E%E9%A1%B6%E9%83%A8/"/>
    
      <category term="Hexo" scheme="http://wlcyhao.github.io/categories/Hexo/"/>
    
  </entry>
  
</feed>
